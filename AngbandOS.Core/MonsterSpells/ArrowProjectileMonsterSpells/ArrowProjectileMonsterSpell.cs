// AngbandOS: 2022 Marc Johnston
//
// This game is released under the “Angband License”, defined as: “© 1997 Ben Harrison, James E.
// Wilson, Robert A. Koeneke This software may be copied and distributed for educational, research,
// and not for profit purposes provided that this copyright and statement are included in all such
// copies. Other copyrights may also apply.”

namespace AngbandOS.Core.MonsterSpells;

[Serializable]
internal abstract class ArrowProjectileMonsterSpell : ProjectileMonsterSpell
{
    protected ArrowProjectileMonsterSpell(Game game) : base(game) { }

    public override void Bind()
    {
        base.Bind();
        DamageRoll = Game.ParseRollExpression(DamageRollExpression);
    }

    public override bool IsInnate => true;
    public override bool CanBeReflected => true;
    public override bool IsAttack => true;
    /// <summary>
    /// Returns a message that the monster is making some strange noise.
    /// </summary>
    /// <param name="monsterName"></param>
    /// <returns></returns>
    public override string? VsPlayerBlindMessage => "You hear a strange noise.";

    /// <summary>
    /// Returns the roll expression that determines the amount of damage the arrow projectile inflicts.  This expression is parse
    /// to generate the DamageDiceRoll.
    /// </summary>
    protected abstract string DamageRollExpression { get; }

    /// <summary>
    /// Returns the roll that determines the amount of damage the arrow projectile inflicts.  This dice roll is generated by
    /// parsing the DamageDiceRollExpression property during binding.
    /// </summary>
    protected Expression DamageRoll { get; private set; }

    /// <summary>
    /// Returns the amount of damage that the arrow projectile inflicts.
    /// </summary>
    /// <param name="monster"></param>
    /// <returns></returns>
    protected override int Damage(Monster monster) => DamageRoll.Compute<IntegerExpression>().Value;

    protected override string ProjectileKey => nameof(ArrowProjectile);

    protected override string[] SmartLearnSpellResistantDetectionKeys => new string[] { nameof(ReflectSpellResistantDetection) };
}
