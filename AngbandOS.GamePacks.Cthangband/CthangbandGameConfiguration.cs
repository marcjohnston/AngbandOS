// AngbandOS: 2022 Marc Johnston
//
// This game is released under the “Angband License”, defined as: “© 1997 Ben Harrison, James E.
// Wilson, Robert A. Koeneke This software may be copied and distributed for educational, research,
// and not for profit purposes provided that this copyright and statement are included in all such
// copies. Other copyrights may also apply.”

using AngbandOS.Core.Interface.Configuration;
using AngbandOS.Core.Shopkeepers;

namespace AngbandOS.GamePacks.Cthangband;

public class CthangbandGameConfiguration : GameConfiguration
{
    public override string[]? GoldFactoriesBindingKeys => new string[]
    {
        "CopperGoldItemFactory",
        "Copper1GoldItemFactory",
        "Copper2GoldItemFactory",
        "PieceOfSilverGoldItemFactory",
        "Silver1GoldItemFactory",
        "Silver2GoldItemFactory",
        "SomeGarnetsGoldItemFactory",
        "LotOfGarnetsGoldItemFactory",
        "GoldGoldItemFactory",
        "SomeGoldGoldItemFactory",
        "LotOfGoldGoldItemFactory",
        "OpalsGoldItemFactory",
        "SapphiresGoldItemFactory",
        "RubiesGoldItemFactory",
        "DiamondsGoldItemFactory",
        "EmeraldsGoldItemFactory",
        "MithrilGoldItemFactory",
        "AdamantiteGoldItemFactory"
    };

    public override HelpGroupGameConfiguration[]? HelpGroups => new HelpGroupGameConfiguration[]
    {
        new WizardCharacterEditingHelpGroup(),
        new WizardGeneralCommandsHelpGroup(),
        new WizardMonstersHelpGroup(),
        new WizardMovementHelpGroup(),
        new WizardObjectCommandsHelpGroup()
    };

    public override SymbolGameConfiguration[]? Symbols => new SymbolGameConfiguration[]
    {
        new AmpersandSymbol(),
        new AsteriskSymbol(),
        new AtSymbol(),
        new BackSlashSymbol(),
        new CaretSymbol(),
        new CloseBraceSymbol(),
        new CloseBracketSymbol(),
        new CloseParenthesisSymbol(),
        new ColonSymbol(),
        new CommaSymbol(),
        new DollarSignSymbol(),
        new DoubleQuoteSymbol(),
        new EqualSignSymbol(),
        new ExclamationPointSymbol(),
        new ForwardSlashSymbol(),
        new GreaterThanSymbol(),
        new LessThanSymbol(),
        new LowerASymbol(),
        new LowerBSymbol(),
        new LowerCSymbol(),
        new LowerDSymbol(),
        new LowerESymbol(),
        new LowerFSymbol(),
        new LowerGSymbol(),
        new LowerHSymbol(),
        new LowerISymbol(),
        new LowerJSymbol(),
        new LowerKSymbol(),
        new LowerLSymbol(),
        new LowerMSymbol(),
        new LowerNSymbol(),
        new LowerOSymbol(),
        new LowerPSymbol(),
        new LowerQSymbol(),
        new LowerRSymbol(),
        new LowerSSymbol(),
        new LowerTSymbol(),
        new LowerUSymbol(),
        new LowerVSymbol(),
        new LowerWSymbol(),
        new LowerXSymbol(),
        new LowerYSymbol(),
        new LowerZSymbol(),
        new LowerASymbol(),
        new MinusSignSymbol(),
        new NumberEightSymbol(),
        new NumberFiveSymbol(),
        new NumberFourSymbol(),
        new NumberNineSymbol(),
        new NumberOneSymbol(),
        new NumberSevenSymbol(),
        new NumberSixSymbol(),
        new NumberThreeSymbol(),
        new NumberTwoSymbol(),
        new NumberZeroSymbol(),
        new OpenBraceSymbol(),
        new OpenBracketSymbol(),
        new OpenParenthesisSymbol(),
        new PercentSignSymbol(),
        new PeriodSymbol(),
        new PlusSignSymbol(),
        new PoundSignSymbol(),
        new QuestionMarkSymbol(),
        new SemiColonSymbol(),
        new SingleQuoteSymbol(),
        new SpaceBarSymbol(),
        new TildeSymbol(),
        new UnderscoreSymbol(),
        new UpperASymbol(),
        new UpperBSymbol(),
        new UpperCSymbol(),
        new UpperDSymbol(),
        new UpperESymbol(),
        new UpperFSymbol(),
        new UpperGSymbol(),
        new UpperHSymbol(),
        new UpperISymbol(),
        new UpperJSymbol(),
        new UpperKSymbol(),
        new UpperLSymbol(),
        new UpperMSymbol(),
        new UpperOSymbol(),
        new UpperPSymbol(),
        new UpperQSymbol(),
        new UpperRSymbol(),
        new UpperSSymbol(),
        new UpperTSymbol(),
        new UpperUSymbol(),
        new UpperVSymbol(),
        new UpperWSymbol(),
        new UpperXSymbol(),
        new UpperYSymbol(),
        new UpperZSymbol(),
        new VerticalBarSymbol()
    };

    public override SyllableSetGameConfiguration[]? SyllableSets => new SyllableSetGameConfiguration[]
    {
        new AngelicSyllableSet(),
        new CthuloidSyllableSet(),
        new DwarvenSyllableSet(),
        new ElvishSyllableSet(),
        new GnomishSyllableSet(),
        new HobbitSyllableSet(),
        new HumanSyllableSet(),
        new KlackonSyllableSet(),
        new OrcishSyllableSet(),
        new YeekishSyllableSet()
    };

    public override VaultGameConfiguration[]? Vaults => new VaultGameConfiguration[]
    {
        new BubblesVault(),
        new CastleDeathVault(),
        new ConcentricityVault(),
        new CurlicuesOneVault(),
        new CycloneVault(),
        new DarwinismVault(),
        new FalseWallVault(),
        new FunnelVault(),
        new GreaterVaultAbsolutelyHugeVault(),
        new GreaterVaultAnotherNethackStyleCastleVault(),
        new GreaterVaultButterflyVault(),
        new GreaterVaultCastleVault(),
        new GreaterVaultChambersVault(),
        new GreaterVaultDerElBahriVault(),
        new GreaterVaultDividedVault(),
        new GreaterVaultDivisiVault(),
        new GreaterVaultGreaterCastleVault(),
        new GreaterVaultGreatSpiralVault(),
        new GreaterVaultHugeVault(),
        new GreaterVaultHypostyleOfRamsesIIIVault(),
        new GreaterVaultKarnakPartIVault(),
        new GreaterVaultKomOmboVault(),
        new GreaterVaultLargeVault(),
        new GreaterVaultMortuaryTempleOfSetyVault(),
        new GreaterVaultNethackBuildingVault(),
        new GreaterVaultNethackCastleAlmostVault(),
        new GreaterVaultNethackHellLevel1Vault(),
        new GreaterVaultNethackHellLevel2Vault(),
        new GreaterVaultNethackHellLevel3Vault(),
        new GreaterVaultNethackLargeCityVault(),
        new GreaterVaultNethackMirrorVault(),
        new GreaterVaultNethackSamuraiCastle2Vault(),
        new GreaterVaultNethackSamuraiCastleVault(),
        new GreaterVaultNethackSpiralVault(),
        new GreaterVaultNethackTombVault(),
        new GreaterVaultPattern2Vault(),
        new GreaterVaultSierpinskiVault(),
        new GreaterVaultSpiralCastleVault(),
        new GreaterVaultSubdivisionsVault(),
        new GreaterVaultTitanicVault(),
        new GreaterVaultTwistedCubeVault(),
        new GreaterVaultUniversityVault(),
        new HellpitVault(),
        new JigsawVault(),
        new LesserVaultAmadaTempleVault(),
        new LesserVaultAmenhotepIVault(),
        new LesserVaultArenaVault(),
        new LesserVaultBankVault(),
        new LesserVaultBelvoirKeepVault(),
        new LesserVaultBrainsLairVault(),
        new LesserVaultCamouflagedVault(),
        new LesserVaultcampVault(),
        new LesserVaultcelticVault(),
        new LesserVaultCentralVault(),
        new LesserVaultCrossVault(),
        new LesserVaultderElBahriSanctuaryVault(),
        new LesserVaultdiagonalVault(),
        new LesserVaulteasterEggVault(),
        new LesserVaultedfuVault(),
        new LesserVaulthathorChapelVault(),
        new LesserVaulthospitalWardVault(),
        new LesserVaultKarnakPartIIVault(),
        new LesserVaultlayersVault(),
        new LesserVaultlesserCryptVault(),
        new LesserVaultmazeOfRoomsVault(),
        new LesserVaultmazeVault(),
        new LesserVaultmineVault(),
        new LesserVaultmirrorVault(),
        new LesserVaultmonsterWcVault(),
        new LesserVaultnethackCityVault(),
        new LesserVaultnethackHeadVault(),
        new LesserVaultnethackRoomsVault(),
        new LesserVaultnethackSpiralRoomsVault(),
        new LesserVaultnethackStyleTowerVault(),
        new LesserVaultnethackTinyCastleVault(),
        new LesserVaultnotandVault(),
        new LesserVaultoctagonVault(),
        new LesserVaultosirisHallsVault(),
        new LesserVaultoverlapVault(),
        new LesserVaultPatternVault(),
        new LesserVaultprisonVault(),
        new LesserVaultRoomsVault(),
        new LesserVaultroundVault(),
        new LesserVaultserpentVault(),
        new LesserVaultspiralVault(),
        new LesserVaultsquareVault(),
        new LesserVaulttempleAtAbydosVault(),
        new LesserVaulttempleOfDenderehVault(),
        new LesserVaulttempleOfSetyVault(),
        new LesserVaulttetrisTilesVault(),
        new LesserVaulttowerVault(),
        new LesserVaultxFactorVault(),
        new LesserVaultyinYangVault(),
        new LesserVaultzelaznyVault(),
        new LVTurnaboutVault(),
        new MiniatureCellVault(),
        new MirroredQuartetVault(),
        new ModifiedGreaterVaultHugeVault(),
        new PlanetXVault(),
        new RockHardVault(),
        new RoundaboutsOneVault(),
        new RoundaboutThreeVault(),
        new RoundaboutTwoVault(),
        new SnakeMazeVault(),
        new TargetPracticeVault(),
        new TheBankFromHellVault(),
        new TheIInTheStormVault(),
        new TheRewardIsWorthItVault()
    };

    public override PluralGameConfiguration[]? Plurals => new PluralGameConfiguration[]
    {
        new BootsPlural(),
        new GlovesPlural(),
        new GoldPlural(),
        new JunkPlural()
    };

    public override ProjectileGraphicGameConfiguration[]? ProjectileGraphics => new ProjectileGraphicGameConfiguration[]
    {
        new BeigeBoltProjectileGraphic(),
        new BeigeBulletProjectileGraphic(),
        new BeigeSplatProjectileGraphic(),
        new BlackBoltProjectileGraphic(),
        new BlackBulletProjectileGraphic(),
        new BlackSplatProjectileGraphic(),
        new BlueBoltProjectileGraphic(),
        new BlueBulletProjectileGraphic(),
        new BlueSplatProjectileGraphic(),
        new BrightBeigeBoltProjectileGraphic(),
        new BrightBeigeBulletProjectileGraphic(),
        new BrightBeigeSplatProjectileGraphic(),
        new BrightBlueBoltProjectileGraphic(),
        new BrightBlueBulletProjectileGraphic(),
        new BrightBlueSplatProjectileGraphic(),
        new BrightBrownBoltProjectileGraphic(),
        new BrightBrownBulletProjectileGraphic(),
        new BrightBrownSplatProjectileGraphic(),
        new BrightChartreuseBoltProjectileGraphic(),
        new BrightChartreuseBulletProjectileGraphic(),
        new BrightChartreuseSplatProjectileGraphic(),
        new BrightGreenBoltProjectileGraphic(),
        new BrightGreenBulletProjectileGraphic(),
        new BrightGreenSplatProjectileGraphic(),
        new BrightGreyBoltProjectileGraphic(),
        new BrightGreyBulletProjectileGraphic(),
        new BrightGreySplatProjectileGraphic(),
        new BrightOrangeBoltProjectileGraphic(),
        new BrightOrangeBulletProjectileGraphic(),
        new BrightOrangeSplatProjectileGraphic(),
        new BrightPinkBoltProjectileGraphic(),
        new BrightPinkBulletProjectileGraphic(),
        new BrightPinkSplatProjectileGraphic(),
        new BrightPurpleBoltProjectileGraphic(),
        new BrightPurpleBulletProjectileGraphic(),
        new BrightPurpleSplatProjectileGraphic(),
        new BrightRedBoltProjectileGraphic(),
        new BrightRedBulletProjectileGraphic(),
        new BrightRedSplatProjectileGraphic(),
        new BrightTurquoiseBoltProjectileGraphic(),
        new BrightTurquoiseBulletProjectileGraphic(),
        new BrightTurquoiseSplatProjectileGraphic(),
        new BrightWhiteBoltProjectileGraphic(),
        new BrightWhiteBulletProjectileGraphic(),
        new BrightWhiteSplatProjectileGraphic(),
        new BrightYellowBoltProjectileGraphic(),
        new BrightYellowBulletProjectileGraphic(),
        new BrightYellowSplatProjectileGraphic(),
        new BrownBoltProjectileGraphic(),
        new BrownBulletProjectileGraphic(),
        new BrownSplatProjectileGraphic(),
        new ChartreuseBoltProjectileGraphic(),
        new ChartreuseBulletProjectileGraphic(),
        new ChartreuseSplatProjectileGraphic(),
        new CopperBoltProjectileGraphic(),
        new CopperBulletProjectileGraphic(),
        new CopperSplatProjectileGraphic(),
        new DiamondBoltProjectileGraphic(),
        new DiamondBulletProjectileGraphic(),
        new DiamondSplatProjectileGraphic(),
        new GoldBoltProjectileGraphic(),
        new GoldBulletProjectileGraphic(),
        new GoldSplatProjectileGraphic(),
        new GreenBoltProjectileGraphic(),
        new GreenBulletProjectileGraphic(),
        new GreenSplatProjectileGraphic(),
        new GreyBoltProjectileGraphic(),
        new GreyBulletProjectileGraphic(),
        new GreySplatProjectileGraphic(),
        new OrangeBoltProjectileGraphic(),
        new OrangeBulletProjectileGraphic(),
        new OrangeSplatProjectileGraphic(),
        new PinkBoltProjectileGraphic(),
        new PinkBulletProjectileGraphic(),
        new PinkSplatProjectileGraphic(),
        new PurpleBoltProjectileGraphic(),
        new PurpleBulletProjectileGraphic(),
        new PurpleSplatProjectileGraphic(),
        new RedBoltProjectileGraphic(),
        new RedBulletProjectileGraphic(),
        new RedSplatProjectileGraphic(),
        new SilverBoltProjectileGraphic(),
        new SilverBulletProjectileGraphic(),
        new SilverSplatProjectileGraphic(),
        new TurquoiseBoltProjectileGraphic(),
        new TurquoiseBulletProjectileGraphic(),
        new TurquoiseSplatProjectileGraphic(),
        new WhiteBoltProjectileGraphic(),
        new WhiteBulletProjectileGraphic(),
        new WhiteSplatProjectileGraphic(),
        new YellowBoltProjectileGraphic(),
        new YellowBulletProjectileGraphic(),
        new YellowSplatProjectileGraphic()
    };

    public override AnimationGameConfiguration[]? Animations => new AnimationGameConfiguration[]
    {
        new BeigeCloudAnimation(),
        new BeigeContractAnimation(),
        new BeigeControlAnimation(),
        new BeigeExpandAnimation(),
        new BeigeQuestionAnimation(),
        new BeigeSparkleAnimation(),
        new BeigeSwirlAnimation(),
        new BlackCloudAnimation(),
        new BlackContractAnimation(),
        new BlackControlAnimation(),
        new BlackExpandAnimation(),
        new BlackFlashAnimation(),
        new BlackQuestionAnimation(),
        new BlackSparkleAnimation(),
        new BlackSwirlAnimation(),
        new BlackWhiteFlashAnimation(),
        new BlueCloudAnimation(),
        new BlueContractAnimation(),
        new BlueControlAnimation(),
        new BlueExpandAnimation(),
        new BlueFlashAnimation(),
        new BlueQuestionAnimation(),
        new BlueSparkleAnimation(),
        new BlueSwirlAnimation(),
        new BrightBeigeCloudAnimation(),
        new BrightBeigeContractAnimation(),
        new BrightBeigeExpandAnimation(),
        new BrightBeigeSparkleAnimation(),
        new BrightBeigeSwirlAnimation(),
        new BrightBlueCloudAnimation(),
        new BrightBlueContractAnimation(),
        new BrightBlueExpandAnimation(),
        new BrightBlueSparkleAnimation(),
        new BrightBlueSwirlAnimation(),
        new BrightBrownCloudAnimation(),
        new BrightBrownContractAnimation(),
        new BrightBrownExpandAnimation(),
        new BrightBrownSparkleAnimation(),
        new BrightBrownSwirlAnimation(),
        new BrightChartreuseCloudAnimation(),
        new BrightChartreuseContractAnimation(),
        new BrightChartreuseExpandAnimation(),
        new BrightChartreuseSparkleAnimation(),
        new BrightChartreuseSwirlAnimation(),
        new BrightGreenCloudAnimation(),
        new BrightGreenContractAnimation(),
        new BrightGreenExpandAnimation(),
        new BrightGreenSparkleAnimation(),
        new BrightGreenSwirlAnimation(),
        new BrightGreyCloudAnimation(),
        new BrightGreyContractAnimation(),
        new BrightGreyExpandAnimation(),
        new BrightGreySparkleAnimation(),
        new BrightGreySwirlAnimation(),
        new BrightOrangeCloudAnimation(),
        new BrightOrangeContractAnimation(),
        new BrightOrangeExpandAnimation(),
        new BrightOrangeSparkleAnimation(),
        new BrightOrangeSwirlAnimation(),
        new BrightPinkCloudAnimation(),
        new BrightPinkContractAnimation(),
        new BrightPinkExpandAnimation(),
        new BrightPinkSparkleAnimation(),
        new BrightPinkSwirlAnimation(),
        new BrightPurpleCloudAnimation(),
        new BrightPurpleContractAnimation(),
        new BrightPurpleExpandAnimation(),
        new BrightPurpleSparkleAnimation(),
        new BrightPurpleSwirlAnimation(),
        new BrightRedCloudAnimation(),
        new BrightRedContractAnimation(),
        new BrightRedExpandAnimation(),
        new BrightRedSparkleAnimation(),
        new BrightRedSwirlAnimation(),
        new BrightTurquoiseCloudAnimation(),
        new BrightTurquoiseContractAnimation(),
        new BrightTurquoiseExpandAnimation(),
        new BrightTurquoiseSparkleAnimation(),
        new BrightTurquoiseSwirlAnimation(),
        new BrightWhiteCloudAnimation(),
        new BrightWhiteContractAnimation(),
        new BrightWhiteExpandAnimation(),
        new BrightWhiteSparkleAnimation(),
        new BrightWhiteSwirlAnimation(),
        new BrightYellowCloudAnimation(),
        new BrightYellowContractAnimation(),
        new BrightYellowExpandAnimation(),
        new BrightYellowSparkleAnimation(),
        new BrightYellowSwirlAnimation(),
        new BrownCloudAnimation(),
        new BrownContractAnimation(),
        new BrownControlAnimation(),
        new BrownExpandAnimation(),
        new BrownFlashAnimation(),
        new BrownQuestionAnimation(),
        new BrownSparkleAnimation(),
        new BrownSwirlAnimation(),
        new ChartreuseCloudAnimation(),
        new ChartreuseContractAnimation(),
        new ChartreuseControlAnimation(),
        new ChartreuseExpandAnimation(),
        new ChartreuseFlashAnimation(),
        new ChartreuseQuestionAnimation(),
        new ChartreuseSparkleAnimation(),
        new ChartreuseSwirlAnimation(),
        new CopperCloudAnimation(),
        new CopperContractAnimation(),
        new CopperExpandAnimation(),
        new CopperSparkleAnimation(),
        new CopperSwirlAnimation(),
        new DiamondCloudAnimation(),
        new DiamondContractAnimation(),
        new DiamondExpandAnimation(),
        new DiamondSparkleAnimation(),
        new DiamondSwirlAnimation(),
        new GoldCloudAnimation(),
        new GoldContractAnimation(),
        new GoldExpandAnimation(),
        new GoldSparkleAnimation(),
        new GoldSwirlAnimation(),
        new GreenCloudAnimation(),
        new GreenContractAnimation(),
        new GreenControlAnimation(),
        new GreenExpandAnimation(),
        new GreenFlashAnimation(),
        new GreenPurpleFlashAnimation(),
        new GreenQuestionAnimation(),
        new GreenSparkleAnimation(),
        new GreenSwirlAnimation(),
        new GreyCloudAnimation(),
        new GreyContractAnimation(),
        new GreyControlAnimation(),
        new GreyExpandAnimation(),
        new GreyFlashAnimation(),
        new GreyQuestionAnimation(),
        new GreySparkleAnimation(),
        new GreySwirlAnimation(),
        new OrangeCloudAnimation(),
        new OrangeContractAnimation(),
        new OrangeControlAnimation(),
        new OrangeExpandAnimation(),
        new OrangeFlashAnimation(),
        new OrangeQuestionAnimation(),
        new OrangeSparkleAnimation(),
        new OrangeSwirlAnimation(),
        new PinkChartreuseFlashAnimation(),
        new PinkCloudAnimation(),
        new PinkContractAnimation(),
        new PinkControlAnimation(),
        new PinkExpandAnimation(),
        new PinkFlashAnimation(),
        new PinkPurpleFlashAnimation(),
        new PinkQuestionAnimation(),
        new PinkSparkleAnimation(),
        new PinkSwirlAnimation(),
        new PurpleCloudAnimation(),
        new PurpleContractAnimation(),
        new PurpleControlAnimation(),
        new PurpleExpandAnimation(),
        new PurpleFlashAnimation(),
        new PurpleQuestionAnimation(),
        new PurpleSparkleAnimation(),
        new PurpleSwirlAnimation(),
        new RedBlackFlashAnimation(),
        new RedCloudAnimation(),
        new RedContractAnimation(),
        new RedControlAnimation(),
        new RedExpandAnimation(),
        new RedFlashAnimation(),
        new RedOrangeFlashAnimation(),
        new RedQuestionAnimation(),
        new RedSparkleAnimation(),
        new RedSwirlAnimation(),
        new RedTurquoiseFlashAnimation(),
        new RedWhiteFlashAnimation(),
        new RedYellowFlashAnimation(),
        new SilverCloudAnimation(),
        new SilverContractAnimation(),
        new SilverExpandAnimation(),
        new SilverSparkleAnimation(),
        new SilverSwirlAnimation(),
        new TurquoiseCloudAnimation(),
        new TurquoiseContractAnimation(),
        new TurquoiseControlAnimation(),
        new TurquoiseExpandAnimation(),
        new TurquoiseFlashAnimation(),
        new TurquoiseQuestionAnimation(),
        new TurquoiseSparkleAnimation(),
        new TurquoiseSwirlAnimation(),
        new WhiteCloudAnimation(),
        new WhiteContractAnimation(),
        new WhiteControlAnimation(),
        new WhiteExpandAnimation(),
        new WhiteFlashAnimation(),
        new WhiteQuestionAnimation(),
        new WhiteSparkleAnimation(),
        new WhiteSwirlAnimation(),
        new YellowBlueFlashAnimation(),
        new YellowCloudAnimation(),
        new YellowContractAnimation(),
        new YellowControlAnimation(),
        new YellowExpandAnimation(),
        new YellowFlashAnimation(),
        new YellowQuestionAnimation(),
        new YellowSparkleAnimation(),
        new YellowSwirlAnimation()
    };

    public override AttackGameConfiguration[]? Attacks => new AttackGameConfiguration[]
    {
        new BegAttack(),
        new BiteAttack(),
        new ButtAttack(),
        new ChargeAttack(),
        new ClawAttack(),
        new CrawlAttack(),
        new CrushAttack(),
        new DroolAttack(),
        new EngulfAttack(),
        new GazeAttack(),
        new HitAttack(),
        new InsultAttack(),
        new KickAttack(),
        new MoanAttack(),
        new PunchAttack(),
        new SingingAttack(),
        new SpitAttack(),
        new SporeAttack(),
        new StingAttack(),
        new TouchAttack(),
        new WailAttack(),
        new WorshipAttack()
    };

    public override string[]? ElvishTexts => new string[]
    {
        "adan", "ael", "in", "agl", "ar", "aina", "alda", "al", "qua", "am", "arth", "amon", "anca", "an", "dune",
        "anga", "anna", "ann", "on", "ar", "ien", "atar", "band", "bar", "ad", "bel", "eg", "brag", "ol", "breth",
        "il", "brith", "cal", "en", "gal", "en", "cam", "car", "ak", "cel", "eb", "cor", "on", "cu", "cui", "vie",
        "cul", "curu", "dae", "dag", "or", "del", "din", "dol", "dor", "draug", "du", "duin", "dur", "ear", "ech",
        "or", "edh", "el", "eith", "elen", "er", "ereg", "es", "gal", "fal", "as", "far", "oth", "faug", "fea",
        "fin", "for", "men", "fuin", "gaer", "gaur", "gil", "gir", "ith", "glin", "gol", "odh", "gond", "gor",
        "groth", "grod", "gul", "gurth", "gwaith", "gwath", "wath", "had", "hod", "haudh", "heru", "him", "hini",
        "hith", "hoth", "hyar", "men", "ia", "iant", "iath", "iaur", "ilm", "iluve", "kal", "gal", "kano", "kel",
        "kemen", "khel", "ek", "khil", "kir", "lad", "laure", "lhach", "lin", "lith", "lok", "lom", "lome", "londe",
        "los", "loth", "luin", "maeg", "mal", "man", "mel", "men", "menel", "mer", "eth", "min", "as", "mir",
        "mith", "mor", "moth", "nan", "nar", "naug", "dil", "dur", "nel", "dor", "nen", "nim", "orn", "orod", "os",
        "pal", "an", "pel", "quen", "quet", "ram", "ran", "rant", "ras", "rauko", "ril", "rim", "ring", "ris",
        "roch", "rom", "rond", "ros", "ruin", "ruth", "sarn", "ser", "eg", "sil", "sir", "sul", "tal", "dal", "tal",
        "ath", "tar", "tath", "ar", "taur", "tel", "thal", "thang", "thar", "thaur", "thin", "thol", "thon", "thor",
        "on", "til", "tin", "tir", "tol", "tum", "tur", "uial", "ur", "val", "wen", "wing", "yave"
    };

    public override string[]? FindQuests => new string[]
    {
        "You find the following inscription in the floor",
        "You see a message inscribed in the wall",
        "There is a sign saying",
        "Something is written on the staircase",
        "You find a scroll with the following message"
    };

    public override string[]? FunnyComments => new string[]
    {
        "Wow, cosmic, man!",
        "Rad!",
        "Groovy!",
        "Cool!",
        "Far out!"
    };

    public override string[]? FunnyDescriptions => new string[]
    {
        "silly", "hilarious", "absurd", "insipid", "ridiculous", "laughable", "ludicrous", "far-out", "groovy",
        "postmodern", "fantastic", "dadaistic", "cubistic", "cosmic", "awesome", "incomprehensible", "fabulous",
        "amazing", "incredible", "chaotic", "wild", "preposterous"
    };

    public override string[]? HorrificDescriptions => new string[]
    {
        "abominable", "abysmal", "appalling", "baleful", "blasphemous", "disgusting", "dreadful", "filthy",
        "grisly", "hideous", "hellish", "horrible", "infernal", "loathsome", "nightmarish", "repulsive",
        "sacrilegious", "terrible", "unclean", "unspeakable"
    };

    public override string[]? IllegibleFlavorSyllables => new string[]
    {
        "a", "ab", "ag", "aks", "ala", "an", "ankh", "app", "arg", "arze", "ash", "aus", "ban", "bar", "bat", "bek",
        "bie", "bin", "bit", "bjor", "blu", "bot", "bu", "byt", "comp", "con", "cos", "cre", "dalf", "dan", "den",
        "der", "doe", "dok", "eep", "el", "eng", "er", "ere", "erk", "esh", "evs", "fa", "fid", "flit", "for",
        "fri", "fu", "gan", "gar", "glen", "gop", "gre", "ha", "he", "hyd", "i", "ing", "ion", "ip", "ish", "it",
        "ite", "iv", "jo", "kho", "kli", "klis", "la", "lech", "man", "mar", "me", "mi", "mic", "mik", "mon",
        "mung", "mur", "nag", "nej", "nelg", "nep", "ner", "nes", "nis", "nih", "nin", "o", "od", "ood", "org",
        "orn", "ox", "oxy", "pay", "pet", "ple", "plu", "po", "pot", "prok", "re", "rea", "rhov", "ri", "ro", "rog",
        "rok", "rol", "sa", "san", "sat", "see", "sef", "seh", "shu", "ski", "sna", "sne", "snik", "sno", "so",
        "sol", "sri", "sta", "sun", "ta", "tab", "tem", "ther", "ti", "tox", "trol", "tue", "turs", "u", "ulk",
        "um", "un", "uni", "ur", "val", "viv", "vly", "vom", "wah", "wed", "werg", "wex", "whon", "wun", "x",
        "yerg", "yp", "zun", "tri", "blaa", "jah", "bul", "on", "foo", "ju", "xuxu"
    };

    public override string[]? ShopkeeperAcceptedComments => new string[]
    {
        "Okay.",
        "Fine.",
        "Accepted!",
        "Agreed!",
        "Done!",
        "Taken!"
    };

    public override ProjectileGameConfiguration[]? Projectiles => new ProjectileGameConfiguration[]
    {
        new AcidProjectile(),
        new ArrowProjectile(),
        new ChaosProjectile(),
        new CharmProjectile(),
        new ColdProjectile(),
        new ConfusionProjectile(),
        new ControlAnimalProjectile(),
        new ControlUndeadProjectile(),
        new DarknessProjectile(),
        new DarknessWeakProjectile(),
        new DeathRayProjectile(),
        new DestroyTrapOrDoorProjectile(),
        new DestroyTrapProjectile(),
        new DisenchantProjectile(),
        new DisintegrateProjectile(),
        new DispelAllProjectile(),
        new DispelDemonProjectile(),
        new DispelEvilProjectile(),
        new DispelGoodProjectile(),
        new DispelLivingProjectile(),
        new DispelUndeadProjectile(),
        new DominationProjectile(),
        new ElectricityProjectile(),
        new ExplodeProjectile(),
        new FireProjectile(),
        new ForceProjectile(),
        new GravityProjectile(),
        new HellfireProjectile(),
        new HolyFireProjectile(),
        new IceProjectile(),
        new InertiaProjectile(),
        new JamDoorProjectile(),
        new LightProjectile(),
        new LightWeakProjectile(),
        new MakeDoorProjectile(),
        new MakeElderSignProjectile(),
        new MakeTrapProjectile(),
        new ManaProjectile(),
        new MeteorProjectile(),
        new MissileProjectile(),
        new NetherProjectile(),
        new NexusProjectile(),
        new NoProjectile(),
        new NukeProjectile(),
        new OldCloneProjectile(),
        new OldConfuseProjectile(),
        new OldDrainLifeProjectile(),
        new OldHealProjectile(),
        new OldPolymorphProjectile(),
        new OldSleepProjectile(),
        new OldSlowProjectile(),
        new OldSpeedProjectile(),
        new PlasmaProjectile(),
        new PoisonGasProjectile(),
        new PsiDrainProjectile(),
        new PsiProjectile(),
        new ShardProjectile(),
        new SoundProjectile(),
        new StasisProjectile(),
        new StoneWallProjectile(),
        new StunProjectile(),
        new TelekinesisProjectile(),
        new TeleportAwayAllProjectile(),
        new TeleportAwayEvilProjectile(),
        new TeleportAwayUndeadProjectile(),
        new TimeProjectile(),
        new TurnAllProjectile(),
        new TurnEvilProjectile(),
        new TurnUndeadProjectile(),
        new WallToMudProjectile(),
        new WaterProjectile(),
        new WizardBoltProjectile(),
    };

    public override ProjectileScriptGameConfiguration[]? ProjectileScripts => new ProjectileScriptGameConfiguration[]
    {
        new Acid100rm3ProjectileScript(),
        new Acid130rm2ProjectileScript(),
        new Acid250rm2ProjectileScript(),
        new Acid3d8ProjectileScript(),
        new Acid50r2ProjectileScript(),
        new Acid5d8ProjectileScript(),
        new Acid60r2ProjectileScript(),
        new Acid6d8ProjectileScript(),
        new AcidBeam3d8ProjectileScript(),
        new AcidBeam6d8ProjectileScript(),
        new Arrow150ProjectileScript(),
        new Chaos220rm2ProjectileScript(),
        new Chaos250rm2ProjectileScript(),
        new Charm1xProjectileScript(),
        new Charm45ProjectileScript(),
        new CharmAtLos2xProjectileScript(),
        new Cold100r2ProjectileScript(),
        new Cold110rm2ProjectileScript(),
        new Cold200r3ProjectileScript(),
        new Cold250rm2ProjectileScript(),
        new Cold3d8ProjectileScript(),
        new Cold48r2ProjectileScript(),
        new Cold50r2ProjectileScript(),
        new Cold5d8ProjectileScript(),
        new Cold6d8ProjectileScript(),
        new Cold80r3ProjectileScript(),
        new Cold80rm3ProjectileScript(),
        new ColdBeam3d8ProjectileScript(),
        new ColdBeam5d8ProjectileScript(),
        new Confusion120rm2ProjectileScript(),
        new ControlAnimal1xProjectileScript(),
        new ControlAnimalAtLos2xProjectileScript(),
        new ControlUndead1xProjectileScript(),
        new CreateDoorProjectileScript(),
        new Darkness200rm2ProjectileScript(),
        new DarkProjectileUnfriendlyProjectileScript(),
        new DeathRayProjectileUnfriendlyProjectileScript(),
        new DestroyTrapOrDoorProjectileScript(),
        new DestroyTrapProjectileScript(),
        new Disenchant220rm2ProjectileScript(),
        new Disenchant250rm2ProjectileScript(),
        new DispelAllAtLos1000ProjectileScript(),
        new DispelAllAtLos120ProjectileScript(),
        new DispelAllAtLos150ProjectileScript(),
        new DispelAllAtLos4xProjectileScript(),
        new DispelDemonAtLos1xProjectileScript(),
        new DispelDemonAtLos3xProjectileScript(),
        new DispelEvilAtLos120ProjectileScript(),
        new DispelEvilAtLos4xProjectileScript(),
        new DispelEvilAtLos5xProjectileScript(),
        new DispelEvilAtLos60ProjectileScript(),
        new DispelGood5xProjectileScript(),
        new DispelGoodAtLos4xProjectileScript(),
        new DispelLivingAtLos3xProjectileScript(),
        new DispelMonstersAtLos120ProjectileScript(),
        new DispelUndeadAtLos1xProjectileScript(),
        new DispelUndeadAtLos3xProjectileScript(),
        new DispelUndeadAtLos60ProjectileScript(),
        new Electricity100r3ProjectileScript(),
        new Electricity100rm2ProjectileScript(),
        new Electricity250r3ProjectileScript(),
        new Electricity250rm2ProjectileScript(),
        new Electricity32r2ProjectileScript(),
        new Electricity3d8ProjectileScript(),
        new Electricity4d8ProjectileScript(),
        new Electricity80rm3ProjectileScript(),
        new ElectricityAll150r3Script(),
        new ElectricityBeam3d8ProjectileScript(),
        new Explode230rm2ProjectileScript(),
        new Explode250rm2ProjectileScript(),
        new Explode25d25ProjectileUnfriendlyProjectileScript(),
        new Fire100r3ProjectileScript(),
        new Fire100rm3ProjectileScript(),
        new Fire120r3ProjectileScript(),
        new Fire1xp55r2ProjectileScript(),
        new Fire200rm2ProjectileScript(),
        new Fire250rm2ProjectileScript(),
        new Fire50r2ProjectileScript(),
        new Fire6d8ProjectileScript(),
        new Fire72r2ProjectileScript(),
        new Fire72r3ProjectileScript(),
        new Fire8d8ProjectileScript(),
        new Fire9d8ProjectileScript(),
        new FireBeam6d8ProjectileScript(),
        new FireBeam8d8ProjectileScript(),
        new Frost6d8ProjectileScript(),
        new Jamdoor1d30p20ProjectileScript(),
        new Light200rm2ProjectileScript(),
        new LightWeak0ProjectileScript(),
        new LightWeak6d8ProjectileScript(),
        new MakeTrapr1ProjectileScript(),
        new Mana10d10ProjectileFriendlyProjectileScript(),
        new Mana250ProjectileScript(),
        new Mana300r3ProjectileScript(),
        new Missile2d6ProjectileScript(),
        new Missile300rm4ProjectileScript(),
        new MissileBeam2d6ProjectileScript(),
        new Missle300rm3ProjectileScript(),
        new NoProjectileMakeUnfriendlyProjectileScript(),
        new OldCloneProjectileScript(),
        new OldConfuse10ProjectileScript(),
        new OldConfuse20ProjectileScript(),
        new OldConfuseAtLos4xProjectileScript(),
        new OldConfusionProjectileUnfriendlyProjectileScript(),
        new OldDrainLife100ProjectileScript(),
        new OldDrainLife120ProjectileScript(),
        new OldDrainLife125ProjectileScript(),
        new OldDrainLife1xp100ProjectileScript(),
        new OldDrainLife2xProjectileScript(),
        new OldDrainLife50ProjectileScript(),
        new OldDrainLife75ProjectileScript(),
        new OldDrainLife90ProjectileScript(),
        new OldHeal10d10ProjectileFriendlyProjectileScript(),
        new OldHeal2d3ProjectileFriendlyProjectileScript(),
        new OldHeal4d3ProjectileFriendlyProjectileScript(),
        new OldHeal4d6ProjectileScript(),
        new OldHeal50d50ProjectileFriendlyProjectileScript(),
        new OldHeal6d3ProjectileFriendlyProjectileScript(),
        new OldPolymorph1xProjectileScript(),
        new OldSleep1xProjectileScript(),
        new OldSleep1xr1ProjectileScript(),
        new OldSleepAtLos1xProjectileScript(),
        new OldSleepProjectileUnfriendlyProjectileScript(),
        new OldSlow1xProjectileScript(),
        new OldSlow5ProjectileUnfriendlyProjectileScript(),
        new OldSlowAtLos1xProjectileScript(),
        new OldSpeed1xProjectileScript(),
        new OldSpeedAtLos1xProjectileScript(),
        new Poison12r2ProjectileScript(),
        new Poison12r3ProjectileScript(),
        new Poison150rm2ProjectileScript(),
        new PoisonGas250rm2ProjectileScript(),
        new PoisonGas60rm3ProjectileScript(),
        new PoisonProjectileUnfriendlyProjectileScript(),
        new Shard1xp120r2ProjectileScript(),
        new Shardl1d50p75r2ProjectileScript(),
        new SonicBoomProjectileScript(),
        new Sound130rm2ProjectileScript(),
        new Sound230rm2ProjectileScript(),
        new Sound250rm2ProjectileScript(),
        new SpeedProjectileFriendlyProjectileScript(),
        new Stasis4xProjectileScript(),
        new StasisAtLos4xProjectileScript(),
        new Stun1xProjectileScript(),
        new StunAtLos1xProjectileScript(),
        new StunAtLos4xProjectileScript(),
        new TeleportAwayAll100ProjectileScript(),
        new TeleportAwayAll1xProjectileScript(),
        new TeleportAwayAllAtLos4xProjectileScript(),
        new TeleportAwayEvilAtLosByArtifact100ProjectileScript(),
        new TeleportAwayEvilAtLosByGod100ProjectileScript(),
        new TurnAll10ProjectileScript(),
        new TurnAllAtLos1xp30ProjectileScript(),
        new TurnAllAtLos1xp40ProjectileScript(),
        new TurnAllAtLos4xProjectileScript(),
        new TurnEvilAtLos1xProjectileScript(),
        new WallToMud1d30p20ProjectileScript(),
        new WardingProjectileScript(),
    };

    public override ArtifactBiasWeightedRandomGameConfiguration[]? ArtifactBiasWeightedRandoms => new ArtifactBiasWeightedRandomGameConfiguration[]
    {
        new Acid1In1ArtifactBiasWeightedRandom(),
        new Chaos1In1ArtifactBiasWeightedRandom(),
        new Cold1In1ArtifactBiasWeightedRandom(),
        new Electricity1In1ArtifactBiasWeightedRandom(),
        new Fire1In1ArtifactBiasWeightedRandom(),
        new Law1In2OrPriestly1In9ArtifactBiasWeightedRandom(),
        new Necromantic1In1ArtifactBiasWeightedRandom(),
        new Poison1In1ArtifactBiasWeightedRandom(),
        new Poison1In3OrNecromantic1In6OrRogue1ArtifactBiasWeightedRandom(),
        new Priestly1In9ArtifactBiasWeightedRandom(),
        new Ranger1In9ArtifactBiasWeightedRandom(),
        new Rogue1In1ArtifactBiasWeightedRandom(),
        new Warrior1In1ArtifactBiasWeightedRandom(),
        new Warrior1In9ArtifactBiasWeightedRandom(),
    };
    public override ItemClassGameConfiguration[]? ItemClasses => new ItemClassGameConfiguration[]
    {
        new AmuletsItemClass(),
        new ArrowsItemClass(),
        new BoltsItemClass(),
        new BootsItemClass(),
        new BottlesItemClass(),
        new BowItemClass(),
        new ChaosSpellBooksItemClass(),
        new ChestsItemClass(),
        new CloaksItemClass(),
        new CorporealSpellBooksItemClass(),
        new CrossbowItemClass(),
        new CrownsItemClass(),
        new DeathSpellBooksItemClass(),
        new DiggersItemClass(),
        new DragonScaleMailsItemClass(),
        new FlasksItemClass(),
        new FolkSpellBooksItemClass(),
        new FoodItemClass(),
        new GlovesItemClass(),
        new GoldItemClass(),
        new HaftedWeaponsItemClass(),
        new HardArmorsItemClass(),
        new HelmsItemClass(),
        new JunkItemClass(),
        new LifeSpellBooksItemClass(),
        new LightSourcesItemClass(),
        new MushroomItemClass(),
        new NatureSpellBooksItemClass(),
        new PolearmsItemClass(),
        new PotionsItemClass(),
        new RingsItemClass(),
        new RodsItemClass(),
        new ScrollsItemClass(),
        new ShieldsItemClass(),
        new ShotsItemClass(),
        new SkeletonsItemClass(),
        new SlingItemClass(),
        new SoftArmorsItemClass(),
        new SorcerySpellBooksItemClass(),
        new SpikesItemClass(),
        new StaffsItemClass(),
        new SwordsItemClass(),
        new TarotSpellBooksItemClass(),
        new WandsItemClass(),
    };

    public override ItemEnhancementGameConfiguration[]? ItemEnhancements => new ItemEnhancementGameConfiguration[]
    {
        new AcidImmunityAndAcidArtifactBiasItemEnhancement(),
        new AmmoOfBackbitingItemEnhancement(),
        new AmmoOfFlameItemEnhancement(),
        new AmmoOfFrostItemEnhancement(),
        new AmmoOfHurtAnimalItemEnhancement(),
        new AmmoOfHurtDragonItemEnhancement(),
        new AmmoOfHurtEvilItemEnhancement(),
        new AmmoOfShockingItemEnhancement(),
        new AmmoOfSlayingItemEnhancement(),
        new AmmoOfWoundingItemEnhancement(),
        new ArmorBlastedItemEnhancement(),
        new ArmorOfPermanenceItemEnhancement(),
        new ArmorOfResistAcidItemEnhancement(),
        new ArmorOfResistanceItemEnhancement(),
        new ArmorOfResistColdItemEnhancement(),
        new ArmorOfResistFireItemEnhancement(),
        new ArmorOfResistLightningItemEnhancement(),
        new ArmorOfYithItemEnhancement(),
        new BootsOfAnnoyanceItemEnhancement(),
        new BootsOfFreeActionItemEnhancement(),
        new BootsOfNoiseItemEnhancement(),
        new BootsOfSlownessItemEnhancement(),
        new BootsOfSpeedItemEnhancement(),
        new BootsOfStealthItemEnhancement(),
        new BootsWingedItemEnhancement(),
        new BowOfAccuracyItemEnhancement(),
        new BowOfExtraMightItemEnhancement(),
        new BowOfExtraShotsItemEnhancement(),
        new BowOfVelocityItemEnhancement(),
        new BrandAcidAndAcidArtifactBiasItemEnhancement(),
        new BrandColdAndColdArtifactBiasItemEnhancement(),
        new BrandElectricityAndElectricityArtifactBiasItemEnhancement(),
        new BrandFireAndFireArtifactBiasItemEnhancement(),
        new BrandPoisonAndPoisonNecromanticOrRogueArtifactBiasItemEnhancement(),
        new ChaoticAndChaosArtifactBiasItemEnhancement(),
        new CloakOfAmanItemEnhancement(),
        new CloakOfElectricityItemEnhancement(),
        new CloakOfEnvelopingItemEnhancement(),
        new CloakOfImmolationItemEnhancement(),
        new CloakOfIrritationItemEnhancement(),
        new CloakOfProtectionItemEnhancement(),
        new CloakOfStealthItemEnhancement(),
        new CloakOfVulnerabilityItemEnhancement(),
        new ColdImmunityItemEnhancement(),
        new ElectricityImmunityItemEnhancement(),
        new FeatherFallItemItemEnhancement(),
        new FireImmunityItemEnhancement(),
        new FreeActionItemEnhancement(),
        new GlovesOfAgilityItemEnhancement(),
        new GlovesOfClumsinessItemEnhancement(),
        new GlovesOfFreeActionItemEnhancement(),
        new GlovesOfPowerItemEnhancement(),
        new GlovesOfSlayingItemEnhancement(),
        new GlovesOfWeaknessItemEnhancement(),
        new HatOfBeautyItemEnhancement(),
        new HatOfInfravisionItemEnhancement(),
        new HatOfIntelligenceItemEnhancement(),
        new HatOfLightItemEnhancement(),
        new HatOfLordlinessItemEnhancement(),
        new HatOfMightItemEnhancement(),
        new HatOfNaivetyItemEnhancement(),
        new HatOfRegenerationItemEnhancement(),
        new HatOfSeeingItemEnhancement(),
        new HatOfSicklinessItemEnhancement(),
        new HatOfStupidityItemEnhancement(),
        new HatOfTelepathyItemEnhancement(),
        new HatOfTeleportationItemEnhancement(),
        new HatOfTheMagiItemEnhancement(),
        new HatOfUglinessItemEnhancement(),
        new HatOfWisdomItemEnhancement(),
        new HoldLifeItemEnhancement(),
        new ImpactItemEnhancement(),
        new KillDragonItemEnhancement(),
        new LightsourceRadius3ItemEnhancement(),
        new NoMagicItemEnhancement(),
        new OrbOfAcidItemEnhancement(),
        new OrbOfChaosItemEnhancement(),
        new OrbOfCharismaItemEnhancement(),
        new OrbOfClarityItemEnhancement(),
        new OrbOfConstitutionItemEnhancement(),
        new OrbOfCourageItemEnhancement(),
        new OrbOfDarknessItemEnhancement(),
        new OrbOfDexterityItemEnhancement(),
        new OrbOfFlameItemEnhancement(),
        new OrbOfFreedomItemEnhancement(),
        new OrbOfFrostItemEnhancement(),
        new OrbOfHealthItemEnhancement(),
        new OrbOfInsightItemEnhancement(),
        new OrbOfInstabilityItemEnhancement(),
        new OrbOfIntelligenceItemEnhancement(),
        new OrbOfIrritationItemEnhancement(),
        new OrbOfLifeItemEnhancement(),
        new OrbOfLightItemEnhancement(),
        new OrbOfLightnessItemEnhancement(),
        new OrbOfLightningItemEnhancement(),
        new OrbOfMagicItemEnhancement(),
        new OrbOfPowerItemEnhancement(),
        new OrbOfShardsItemEnhancement(),
        new OrbOfSightItemEnhancement(),
        new OrbOfSoundItemEnhancement(),
        new OrbOfStabilityItemEnhancement(),
        new OrbOfStrengthItemEnhancement(),
        new OrbOfSustenanceItemEnhancement(),
        new OrbOfTheMindItemEnhancement(),
        new OrbOfUnlifeItemEnhancement(),
        new OrbOfVenomItemEnhancement(),
        new OrbOfWisdomItemEnhancement(),
        new ReflectBoltsAndArrowsItemEnhancement(),
        new RegenerationItemEnhancement(),
        new ResistAcidAndAcidBiasItemEnhancement(),
        new ResistAcidItemEnhancement(),
        new ResistBlindnessItemEnhancement(),
        new ResistChaosAndChaosBiasItemEnhancement(),
        new ResistChaosItemEnhancement(),
        new ResistColdAndColdBiasItemEnhancement(),
        new ResistColdItemEnhancement(),
        new ResistConfusionAndChaosBiasItemEnhancement(),
        new ResistConfusionItemEnhancement(),
        new ResistDarknessItemEnhancement(),
        new ResistDisenchantItemEnhancement(),
        new ResistElectricityAndElectricityBiasItemEnhancement(),
        new ResistElectricityItemEnhancement(),
        new ResistFearAndWarriorBiasItemEnhancement(),
        new ResistFearItemEnhancement(),
        new ResistFireAndFireBiasItemEnhancement(),
        new ResistFireItemEnhancement(),
        new ResistLightItemEnhancement(),
        new ResistNetherAndNecromanticBiasItemEnhancement(),
        new ResistNetherItemEnhancement(),
        new ResistNexusItemEnhancement(),
        new ResistPoisonAndNecromanticBiasItemEnhancement(),
        new ResistPoisonAndPoisonBiasItemEnhancement(),
        new ResistPoisonAndRogueBiasItemEnhancement(),
        new ResistPoisonItemEnhancement(),
        new ResistShardsItemEnhancement(),
        new ResistSoundItemEnhancement(),
        new SeeInvisibleItemEnhancement(),
        new SheathOfElectricityAndElectricityBiasItemEnhancement(),
        new SheathOfElectricityItemEnhancement(),
        new SheathOfFireAndFireBiasItemEnhancement(),
        new SheathOfFireItemEnhancement(),
        new ShieldOfReflectionItemEnhancement(),
        new ShieldOfResistAcidItemEnhancement(),
        new ShieldOfResistanceItemEnhancement(),
        new ShieldOfResistColdItemEnhancement(),
        new ShieldOfResistFireItemEnhancement(),
        new ShieldOfResistLightningItemEnhancement(),
        new SlayAnimalItemEnhancement(),
        new SlayDemonAndPriestlyArtifactBiasItemEnhancement(),
        new SlayDragonItemEnhancement(),
        new SlayEvilAndLawOrPriestlyArtifactBiasItemEnhancement(),
        new SlayGiantItemEnhancement(),
        new SlayOrcItemEnhancement(),
        new SlayTrollItemEnhancement(),
        new SlayUndeadAndPriestlyArtifactBiasItemEnhancement(),
        new SlowDigestItemEnhancement(),
        new SpecialAbilityItemEnhancement(),
        new SpecialPowerItemEnhancement(),
        new SpecialSustainItemEnhancement(),
        new SustainCharismaItemEnhancement(),
        new SustainConstitutionItemEnhancement(),
        new SustainDexterityItemEnhancement(),
        new SustainIntelligenceItemEnhancement(),
        new SustainStrengthItemEnhancement(),
        new SustainWisdomItemEnhancement(),
        new TelepathyItemEnhancement(),
        new TerribleWeaponOfDiggingItemEnhancement(),
        new VampiricAndNecromanticArtifactBiasItemEnhancement(),
        new VorpalAndWarriorArtifactBiasItemEnhancement(),
        new WeaponBlessedItemEnhancement(),
        new WeaponChaoticItemEnhancement(),
        new WeaponDefenderItemEnhancement(),
        new WeaponElderSignInscribedItemEnhancement(),
        new WeaponOfAnimalBaneItemEnhancement(),
        new WeaponOfBurningItemEnhancement(),
        new WeaponOfDiggingItemEnhancement(),
        new WeaponOfDragonBaneItemEnhancement(),
        new WeaponOfEarthquakesItemEnhancement(),
        new WeaponOfEvilBaneItemEnhancement(),
        new WeaponOfExtraAttacksItemEnhancement(),
        new WeaponOfFreezingItemEnhancement(),
        new WeaponOfKadathItemEnhancement(),
        new WeaponOfLawItemEnhancement(),
        new WeaponOfLengItemEnhancement(),
        new WeaponOfPoisoningItemEnhancement(),
        new WeaponOfSharpnessItemEnhancement(),
        new WeaponOfShockingItemEnhancement(),
        new WeaponOfSlayAnimalItemEnhancement(),
        new WeaponOfSlayDemonItemEnhancement(),
        new WeaponOfSlayDragonItemEnhancement(),
        new WeaponOfSlayEvilItemEnhancement(),
        new WeaponOfSlayGiantItemEnhancement(),
        new WeaponOfSlayingItemEnhancement(),
        new WeaponOfSlayOrcItemEnhancement(),
        new WeaponOfSlayTrollItemEnhancement(),
        new WeaponOfSlayUndeadItemEnhancement(),
        new WeaponOfUndeadBaneItemEnhancement(),
        new WeaponOfVitriolItemEnhancement(),
        new WeaponPlanarWeaponItemEnhancement(),
        new WeaponShatteredItemEnhancement(),
        new WeaponVampiricItemEnhancement(),
        new XtraMightAndRangerArtifactItemEnhancement(),
        new XtraShotsAndRangerArtifactItemEnhancement(),
    };
    public override ItemEnhancementWeightedRandomGameConfiguration[]? ItemEnhancementWeightedRandoms => new ItemEnhancementWeightedRandomGameConfiguration[]
    {
        new AbilityItemEnhancementWeightedRandom(),
        new CloakGoodItemEnhancementWeightedRandom(),
        new CloakPoorItemEnhancementWeightedRandom(),
        new CrownPoorItemEnhancementWeightedRandom(),
        new FixedArtifactItemEnhancementWeightedRandom(),
        new GlovesPoorItemEnhancementWeightedRandom(),
        new HelmPoorItemEnhancementWeightedRandom(),
        new LordlyResistanceItemEnhancementWeightedRandom(),
        new NaturalAndPoisonResistanceItemEnhancementWeightedRandom(),
        new NaturalResistanceItemEnhancementWeightedRandom(),
        new PlanarWeaponItemEnhancementWeightedRandom(),
        new ResistanceAndBiasItemEnhancementWeightedRandom(),
        new ResistanceItemEnhancementWeightedRandom(),
        new SlayingItemEnhancementWeightedRandom(),
        new SlayingRangedWeaponItemEnhancementWeightedRandom(),
        new SustainItemEnhancementWeightedRandom(),
    };
    public override ItemFactoryGameConfiguration[]? ItemFactories => new ItemFactoryGameConfiguration[]
    {
        new IronShotAmmunitionItemFactory(),
        new RoundedPebbleShotAmmunitionItemFactory(),
        new SeekerArrowAmmunitionItemFactory(),
        new SeekerBoltAmmunitionItemFactory(),
        new SteelBoltAmmunitionItemFactory(),
        new WoodenArrowAmmunitionItemFactory(),
        new AdornmentAmuletItemFactory(),
        new AntiMagicAmuletItemFactory(),
        new AntiTeleportationAmuletItemFactory(),
        new AntiTheftAmuletItemFactory(),
        new BrillianceAmuletItemFactory(),
        new CarlammasAmuletItemFactory(),
        new CharismaAmuletItemFactory(),
        new DoomAmuletItemFactory(),
        new IngweAmuletItemFactory(),
        new MagiAmuletItemFactory(),
        new NecklaceAmuletItemFactory(),
        new ReflectionAmuletItemFactory(),
        new ResistAcidAmuletItemFactory(),
        new ResistanceAmuletItemFactory(),
        new SearchingAmuletItemFactory(),
        new SlowDigestionAmuletItemFactory(),
        new TeleportationAmuletItemFactory(),
        new WisdomAmuletItemFactory(),
        new AzathothChaosBookItemFactory(),
        new BasicChiFlowCorporealBookItemFactory(),
        new BeginnersHandbookSorceryBookItemFactory(),
        new BlackMassDeathBookItemFactory(),
        new BlackPrayersDeathBookItemFactory(),
        new CallOfTheWildNatureBookItemFactory(),
        new CantripsforBeginnersFolkBookItemFactory(),
        new CardMasteryTarotBookItemFactory(),
        new CeleanoFragmentsTarotBookItemFactory(),
        new CommonPrayerLifeBookItemFactory(),
        new ConjuringsTricksTarotBookItemFactory(),
        new CthaatAquadingenNatureBookItemFactory(),
        new CultesdesGoulesDeathBookItemFactory(),
        new DeVermisMysteriisCorporealBookItemFactory(),
        new DholChantsLifeBookItemFactory(),
        new EltdownShardsTarotBookItemFactory(),
        new GharneFragmentsChaosBookItemFactory(),
        new HighMassLifeBookItemFactory(),
        new LiberIvonisSorceryBookItemFactory(),
        new MagicksOfMasteryFolkBookItemFactory(),
        new MajorMagicksFolkBookItemFactory(),
        new MasterSorcerersHandbookSorceryBookItemFactory(),
        new MasteryChaosBookItemFactory(),
        new MinorMagicksFolkBookItemFactory(),
        new NatureMasteryNatureBookItemFactory(),
        new NecronomiconDeathBookItemFactory(),
        new PnakoticManuscriptsCorporealBookItemFactory(),
        new PonapeScriptureLifeBookItemFactory(),
        new RevelationsOfGlaakiNatureBookItemFactory(),
        new SignOfChaosChaosBookItemFactory(),
        new UnaussprechlichenKultenSorceryBookItemFactory(),
        new YogicMasteryCorporealBookItemFactory(),
        new HardLeatherBootsItemFactory(),
        new MetalShodBootsItemFactory(),
        new SoftLeatherBootsItemFactory(),
        new LargeIronChestItemFactory(),
        new LargeSteelChestItemFactory(),
        new LargeWoodenChestItemFactory(),
        new RuinedChestItemFactory(),
        new SmallIronChestItemFactory(),
        new SmallSteelChestItemFactory(),
        new SmallWoodenChestItemFactory(),
        new ClothCloakItemFactory(),
        new ElvenCloakItemFactory(),
        new ShadowCloakItemFactory(),
        new GoldenCrownArmorItemFactory(),
        new IronCrownArmorItemFactory(),
        new JewelEncrustedCrownArmorItemFactory(),
        new LeadCrownArmorItemFactory(),
        new DwarvenPickDiggingWeaponItemFactory(),
        new DwarvenShovelDiggingWeaponItemFactory(),
        new GnomishShovelDiggingWeaponItemFactory(),
        new OrcishPickDiggingWeaponItemFactory(),
        new PickDiggingWeaponItemFactory(),
        new ShovelDiggingWeaponItemFactory(),
        new BalanceDragonScaleMailItemFactory(),
        new BlackDragonScaleMailItemFactory(),
        new BlueDragonScaleMailItemFactory(),
        new BronzeDragonScaleMailItemFactory(),
        new ChaosDragonScaleMailItemFactory(),
        new GoldDragonScaleMailItemFactory(),
        new GreenDragonScaleMailItemFactory(),
        new LawDragonScaleMailItemFactory(),
        new MultiHuedDragonScaleMailItemFactory(),
        new PowerDragonScaleMailItemFactory(),
        new PseudoDragonScaleMailItemFactory(),
        new RedDragonScaleMailItemFactory(),
        new WhiteDragonScaleMailItemFactory(),
        new FlaskOfOilItemFactory(),
        new HardBiscuitFoodItemFactory(),
        new PieceOfDwarfBreadFoodItemFactory(),
        new PieceOfElvishWaybreadFoodItemFactory(),
        new PieceOfWarpstoneFoodItemFactory(),
        new PintOfFineAleFoodItemFactory(),
        new PintOfFineWineFoodItemFactory(),
        new RationFoodItemFactory(),
        new SlimeMoldFoodItemFactory(),
        new StripOfVenisonFoodItemFactory(),
        new CestiGlovesItemFactory(),
        new GauntletGlovesItemFactory(),
        new LeatherGlovesItemFactory(),
        new AdamantiteGoldItemFactory(),
        new Copper1GoldItemFactory(),
        new Copper2GoldItemFactory(),
        new CopperGoldItemFactory(),
        new DiamondsGoldItemFactory(),
        new EmeraldsGoldItemFactory(),
        new GoldGoldItemFactory(),
        new LotOfGarnetsGoldItemFactory(),
        new LotOfGoldGoldItemFactory(),
        new MithrilGoldItemFactory(),
        new OpalsGoldItemFactory(),
        new PieceOfSilverGoldItemFactory(),
        new RubiesGoldItemFactory(),
        new SapphiresGoldItemFactory(),
        new Silver1GoldItemFactory(),
        new Silver2GoldItemFactory(),
        new SomeGarnetsGoldItemFactory(),
        new SomeGoldGoldItemFactory(),
        new AdamantitePlateMailHardArmorItemFactory(),
        new AugmentedChainMailHardArmorItemFactory(),
        new BarChainMailHardArmorItemFactory(),
        new ChainMailHardArmorItemFactory(),
        new DoubleChainMailHardArmorItemFactory(),
        new FullPlateHardArmorItemFactory(),
        new MetalBrigandineHardArmorItemFactory(),
        new MetalLamellarHardArmorItemFactory(),
        new MetalScaleMailHardArmorItemFactory(),
        new MithrilChainMailHardArmorItemFactory(),
        new MithrilPlateMailHardArmorItemFactory(),
        new PartialPlateHardArmorItemFactory(),
        new RibbedPlateHardArmorItemFactory(),
        new RustyChainMailHardArmorItemFactory(),
        new DragonHelmItemFactory(),
        new HardLeatherCapHelmItemFactory(),
        new IronHelmItemFactory(),
        new MetalCapHelmItemFactory(),
        new SteelHelmItemFactory(),
        new BrokenStickJunkItemFactory(),
        new EmptyBottleItemFactory(),
        new ShardOfPotteryJunkItemFactory(),
        new BrassLanternLightSourceItemFactory(),
        new GemstoneLightSourceItemFactory(),
        new OrbLightSourceItemFactory(),
        new StarEssenceElendilLightSourceItemFactory(),
        new StarEssenceGaladrielLightSourceItemFactory(),
        new WoodenTorchLightSourceItemFactory(),
        new AwlPikePolearmWeaponItemFactory(),
        new BallAndChainHaftedWeaponItemFactory(),
        new BastardSwordSwordWeaponItemFactory(),
        new BattleAxePolearmWeaponItemFactory(),
        new BeakedAxePolearmWeaponItemFactory(),
        new BladeOfChaosWeaponItemFactory(),
        new BroadAxePolearmWeaponItemFactory(),
        new BroadSwordWeaponItemFactory(),
        new BrokenDaggerWeaponItemFactory(),
        new BrokenSwordWeaponItemFactory(),
        new CutlassWeaponItemFactory(),
        new DaggerWeaponItemFactory(),
        new ExecutionersSwordWeaponItemFactory(),
        new FlailHaftedWeaponItemFactory(),
        new GlaivePolearmWeaponItemFactory(),
        new GreatAxePolearmWeaponItemFactory(),
        new HalberdPolearmWeaponItemFactory(),
        new KatanaWeaponItemFactory(),
        new LancePolearmWeaponItemFactory(),
        new LeadFilledMaceHaftedWeaponItemFactory(),
        new LochaberAxePolearmWeaponItemFactory(),
        new LongSwordWeaponItemFactory(),
        new LucerneHammerHaftedWeaponItemFactory(),
        new MaceHaftedWeaponItemFactory(),
        new MaceOfDisruptionHaftedWeaponItemFactory(),
        new MainGaucheWeaponItemFactory(),
        new MightyHammerHaftedWeaponItemFactory(),
        new MorningStarHaftedWeaponItemFactory(),
        new PikePolearmWeaponItemFactory(),
        new QuarterstaffHaftedWeaponItemFactory(),
        new RapierWeaponItemFactory(),
        new SabreWeaponItemFactory(),
        new ScimitarWeaponItemFactory(),
        new ScytheOfSlicingPolearmWeaponItemFactory(),
        new ScythePolearmWeaponItemFactory(),
        new ShortSwordWeaponItemFactory(),
        new SmallSwordWeaponItemFactory(),
        new SpearPolearmWeaponItemFactory(),
        new TridentPolearmWeaponItemFactory(),
        new TulwarWeaponItemFactory(),
        new TwoHandedFlailHaftedWeaponItemFactory(),
        new TwoHandedSwordWeaponItemFactory(),
        new WarHammerHaftedWeaponItemFactory(),
        new WhipHaftedWeaponItemFactory(),
        new BlindnessMushroomFoodItemFactory(),
        new ConfusionMushroomFoodItemFactory(),
        new CureBlindnessMushroomFoodItemFactory(),
        new CureConfusionMushroomFoodItemFactory(),
        new CureParanoiaMushroomFoodItemFactory(),
        new CurePoisonMushroomFoodItemFactory(),
        new CureSeriousWoundsMushroomFoodItemFactory(),
        new DiseaseMushroomFoodItemFactory(),
        new HallucinationMushroomFoodItemFactory(),
        new NaivetyMushroomFoodItemFactory(),
        new ParalysisMushroomFoodItemFactory(),
        new ParanoiaMushroomFoodItemFactory(),
        new PoisonMushroomFoodItemFactory(),
        new RestoreConstitutionMushroomFoodItemFactory(),
        new RestoreStrengthMushroomFoodItemFactory(),
        new RestoringMushroomFoodItemFactory(),
        new SicknessMushroomFoodItemFactory(),
        new StupidityMushroomFoodItemFactory(),
        new UnhealthMushroomFoodItemFactory(),
        new WeaknessMushroomFoodItemFactory(),
        new AppleJuicePotionItemFactory(),
        new AugmentationPotionItemFactory(),
        new BerserkStrengthPotionItemFactory(),
        new BlindnessPotionItemFactory(),
        new BoldnessPotionItemFactory(),
        new BoozePotionItemFactory(),
        new CharismaPotionItemFactory(),
        new ClumsinessPotionItemFactory(),
        new ConstitutionPotionItemFactory(),
        new CureCriticalWoundsPotionItemFactory(),
        new CureLightWoundsPotionItemFactory(),
        new CureSeriousWoundsPotionItemFactory(),
        new CuringPotionItemFactory(),
        new DetectInvisiblePotionItemFactory(),
        new DetonationsPotionItemFactory(),
        new DexterityPotionItemFactory(),
        new EnlightenmentPotionItemFactory(),
        new ExperiencePotionItemFactory(),
        new HealingPotionItemFactory(),
        new HeroismPotionItemFactory(),
        new InfravisionPotionItemFactory(),
        new IntelligencePotionItemFactory(),
        new InvulnerabilityPotionItemFactory(),
        new IocainePotionItemFactory(),
        new LifePotionItemFactory(),
        new LoseMemoriesPotionItemFactory(),
        new NaivetyPotionItemFactory(),
        new NeutralizePoisonPotionItemFactory(),
        new NewLifePotionItemFactory(),
        new PoisonPotionItemFactory(),
        new ResistancePotionItemFactory(),
        new ResistColdPotionItemFactory(),
        new ResistHeatPotionItemFactory(),
        new RestoreCharismaPotionItemFactory(),
        new RestoreConstitutionPotionItemFactory(),
        new RestoreDexterityPotionItemFactory(),
        new RestoreIntelligencePotionItemFactory(),
        new RestoreLifeLevelsPotionItemFactory(),
        new RestoreManaPotionItemFactory(),
        new RestoreStrengthPotionItemFactory(),
        new RestoreWisdomPotionItemFactory(),
        new RuinationPotionItemFactory(),
        new SaltWaterPotionItemFactory(),
        new SelfKnowledgePotionItemFactory(),
        new SicklinessPotionItemFactory(),
        new SleepPotionItemFactory(),
        new SlimeMoldJuicePotionItemFactory(),
        new SlownessPotionItemFactory(),
        new SlowPoisonPotionItemFactory(),
        new SpecialEnlightenmentPotionItemFactory(),
        new SpecialHealingPotionItemFactory(),
        new SpeedPotionItemFactory(),
        new StrengthPotionItemFactory(),
        new StupidityPotionItemFactory(),
        new UglinessPotionItemFactory(),
        new WaterPotionItemFactory(),
        new WeaknessPotionItemFactory(),
        new WisdomPotionItemFactory(),
        new HeavyCrossbowRangedWeaponItemFactory(),
        new LightCrossbowRangedWeaponItemFactory(),
        new LongBowRangedWeaponItemFactory(),
        new ShortBowRangedWeaponItemFactory(),
        new SlingRangedWeaponItemFactory(),
        new AccuracyRingItemFactory(),
        new AcidRingItemFactory(),
        new AggravateMonsterRingItemFactory(),
        new BarahirRingItemFactory(),
        new BlindnessResistanceRingItemFactory(),
        new ChaosResistanceRingItemFactory(),
        new ConfusionResistanceRingItemFactory(),
        new ConstitutionRingItemFactory(),
        new DamageRingItemFactory(),
        new DexterityRingItemFactory(),
        new DisenchantmentResistanceRingItemFactory(),
        new ExtraAttacksRingItemFactory(),
        new FearResistanceRingItemFactory(),
        new FlamesRingItemFactory(),
        new FreeActionRingItemFactory(),
        new IceRingItemFactory(),
        new IntelligenceRingItemFactory(),
        new LevitationRingItemFactory(),
        new LightAndDarknessResistanceRingItemFactory(),
        new LordlyProtectionRingItemFactory(),
        new NaryaRingItemFactory(),
        new NenyaRingItemFactory(),
        new NetherResistanceRingItemFactory(),
        new NexusResistanceRingItemFactory(),
        new PoisonResistanceRingItemFactory(),
        new PowerRingItemFactory(),
        new ProtectionRingItemFactory(),
        new ResistColdRingItemFactory(),
        new ResistFireRingItemFactory(),
        new SearchingRingItemFactory(),
        new SeeInvisibleRingItemFactory(),
        new ShardResistanceRingItemFactory(),
        new SlayingRingItemFactory(),
        new SlowDigestionRingItemFactory(),
        new SoundResistanceRingItemFactory(),
        new SpeedRingItemFactory(),
        new StrengthRingItemFactory(),
        new StupidityRingItemFactory(),
        new SustainCharismaRingItemFactory(),
        new SustainConstitutionRingItemFactory(),
        new SustainDexterityRingItemFactory(),
        new SustainIntelligenceRingItemFactory(),
        new SustainStrengthRingItemFactory(),
        new SustainWisdomRingItemFactory(),
        new TeleportationRingItemFactory(),
        new TulkasRingItemFactory(),
        new VilyaRingItemFactory(),
        new WeaknessRingItemFactory(),
        new WoeRingItemFactory(),
        new AcidBallsRodItemFactory(),
        new AcidBoltsRodItemFactory(),
        new ColdBallsRodItemFactory(),
        new CuringRodItemFactory(),
        new DetectionRodItemFactory(),
        new DisarmingRodItemFactory(),
        new DoorStairLocationRodItemFactory(),
        new DrainLifeRodItemFactory(),
        new EnlightenmentRodItemFactory(),
        new FireBallsRodItemFactory(),
        new FireBoltsRodItemFactory(),
        new FrostBoltsRodItemFactory(),
        new HavocRodItemFactory(),
        new HealingRodItemFactory(),
        new IlluminationRodItemFactory(),
        new LightningBallsRodItemFactory(),
        new LightningBoltsRodItemFactory(),
        new LightRodItemFactory(),
        new PerceptionRodItemFactory(),
        new PolymorphRodItemFactory(),
        new ProbingRodItemFactory(),
        new RecallRodItemFactory(),
        new RestorationRodItemFactory(),
        new SleepMonsterRodItemFactory(),
        new SlowMonsterRodItemFactory(),
        new SpeedRodItemFactory(),
        new TeleportOtherRodItemFactory(),
        new TrapLocationRodItemFactory(),
        new AcquirementScrollItemFactory(),
        new AggravateMonsterScrollItemFactory(),
        new BlessingScrollItemFactory(),
        new CarnageScrollItemFactory(),
        new ChaosScrollItemFactory(),
        new CreateRandomArtifactScrollItemFactory(),
        new CurseArmorScrollItemFactory(),
        new CurseWeaponScrollItemFactory(),
        new DarknessScrollItemFactory(),
        new DestructionScrollItemFactory(),
        new DetectInvisibleScrollItemFactory(),
        new DispelUndeadScrollItemFactory(),
        new DoorStairLocationScrollItemFactory(),
        new EnchantArmorScrollItemFactory(),
        new EnchantWeaponToDamScrollItemFactory(),
        new EnchantWeaponToHitScrollItemFactory(),
        new FireScrollItemFactory(),
        new HolyChantScrollItemFactory(),
        new HolyPrayerScrollItemFactory(),
        new IceScrollItemFactory(),
        new IdentifyScrollItemFactory(),
        new InvocationScrollItemFactory(),
        new LightScrollItemFactory(),
        new MagicMappingScrollItemFactory(),
        new MassCarnageScrollItemFactory(),
        new MonsterConfusionScrollItemFactory(),
        new ObjectDetectionScrollItemFactory(),
        new PhaseDoorScrollItemFactory(),
        new ProtectionFromEvilScrollItemFactory(),
        new RechargingScrollItemFactory(),
        new RemoveCurseScrollItemFactory(),
        new RumorScrollItemFactory(),
        new RuneOfProtectionScrollItemFactory(),
        new SatisfyHungerScrollItemFactory(),
        new SpecialAcquirementScrollItemFactory(),
        new SpecialEnchantArmorScrollItemFactory(),
        new SpecialEnchantWeaponScrollItemFactory(),
        new SpecialIdentifyScrollItemFactory(),
        new SpecialRemoveCurseScrollItemFactory(),
        new SummonMonsterScrollItemFactory(),
        new SummonUndeadScrollItemFactory(),
        new TeleportationScrollItemFactory(),
        new TeleportLevelScrollItemFactory(),
        new TrapCreationScrollItemFactory(),
        new TrapDetectionScrollItemFactory(),
        new TrapDoorDestructionScrollItemFactory(),
        new TreasureDetectionScrollItemFactory(),
        new WordOfRecallScrollItemFactory(),
        new DragonShieldItemFactory(),
        new LargeLeatherShieldItemFactory(),
        new LargeMetalShieldItemFactory(),
        new OfDeflectionShieldItemFactory(),
        new SmallLeatherShieldItemFactory(),
        new SmallMetalShieldItemFactory(),
        new BrokenBoneSkeletonItemFactory(),
        new BrokenSkullSkeletonItemFactory(),
        new CanineSkeletonSkeletonItemFactory(),
        new DwarfSkeletonSkeletonItemFactory(),
        new ElfSkeletonSkeletonItemFactory(),
        new GnomeSkeletonSkeletonItemFactory(),
        new HumanSkeletonSkeletonItemFactory(),
        new RodentSkeletonSkeletonItemFactory(),
        new FilthyRagSoftArmorItemFactory(),
        new HardLeatherSoftArmorItemFactory(),
        new HardStuddedLeatherSoftArmorItemFactory(),
        new LeatherScaleMailSoftArmorItemFactory(),
        new RobeSoftArmorItemFactory(),
        new SoftLeatherSoftArmorItemFactory(),
        new SoftStuddedLeatherSoftArmorItemFactory(),
        new IronSpikeItemFactory(),
        new CarnageStaffItemFactory(),
        new CureLightWoundsStaffItemFactory(),
        new CuringStaffItemFactory(),
        new DarknessStaffItemFactory(),
        new DestructionStaffItemFactory(),
        new DetectEvilStaffItemFactory(),
        new DetectInvisibleStaffItemFactory(),
        new DispelEvilStaffItemFactory(),
        new DoorStairLocationStaffItemFactory(),
        new EarthquakesStaffItemFactory(),
        new EnlightenmentStaffItemFactory(),
        new HasteMonstersStaffItemFactory(),
        new HealingStaffItemFactory(),
        new HolinessStaffItemFactory(),
        new LightStaffItemFactory(),
        new ObjectLocationStaffItemFactory(),
        new OfTheMagiStaffItemFactory(),
        new PerceptionStaffItemFactory(),
        new PowerStaffItemFactory(),
        new ProbingStaffItemFactory(),
        new RemoveCurseStaffItemFactory(),
        new SleepMonstersStaffItemFactory(),
        new SlowMonstersStaffItemFactory(),
        new SlownessStaffItemFactory(),
        new SpeedStaffItemFactory(),
        new StarlightStaffItemFactory(),
        new SummoningStaffItemFactory(),
        new TeleportationStaffItemFactory(),
        new TrapLocationStaffItemFactory(),
        new TreasureLocationStaffItemFactory(),
        new AcidBallWandItemFactory(),
        new AcidBoltWandItemFactory(),
        new AnnihilationWandItemFactory(),
        new CloneMonsterWandItemFactory(),
        new ColdBallWandItemFactory(),
        new ConfuseMonsterWandItemFactory(),
        new DestroyTrapOrDoorWandItemFactory(),
        new DisarmingWandItemFactory(),
        new DragonsBreathWandItemFactory(),
        new DragonsFlameWandItemFactory(),
        new DragonsFrostWandItemFactory(),
        new DrainLifeWandItemFactory(),
        new FireBallsWandItemFactory(),
        new FireBoltsWandItemFactory(),
        new FrostBoltsWandItemFactory(),
        new HasteMonsterWandItemFactory(),
        new HealMonsterWandItemFactory(),
        new LightningBallsWandItemFactory(),
        new LightWandItemFactory(),
        new MagicMissileWandItemFactory(),
        new PolymorphWandItemFactory(),
        new ScareMonsterWandItemFactory(),
        new ShardBallsWandItemFactory(),
        new SleepMonsterWandItemFactory(),
        new SlowMonsterWandItemFactory(),
        new StinkingCloudWandItemFactory(),
        new StoneToMudWandItemFactory(),
        new TameMonsterWandItemFactory(),
        new TeleportOtherWandItemFactory(),
        new WonderWandItemFactory(),
    };
    public override ProjectileWeightedRandomGameConfiguration[]? ProjectileWeightedRandomScripts => new ProjectileWeightedRandomGameConfiguration[]
    {
        new AcidBoltOrBeam3d8ProjectileWeightedRandom(),
        new AcidBoltOrBeam6d8ProjectileWeightedRandom(),
        new ChaosDisenchantSoundOrShards250rm2ProjectileWeightedRandom(),
        new ChaosOrDisenchant220rm2ProjectileWeightedRandom(),
        new ColdBoltOrBeam3d8ProjectileWeightedRandom(),
        new ColdBoltOrBeam5d8ProjectileWeightedRandom(),
        new DragonsBreatheProjectileWeightedRandom(),
        new ElectricityBoltOrBeam3d8ProjectileWeightedRandom(),
        new FireBoltOrBeam6d8ProjectileWeightedRandom(),
        new FireBoltOrBeam8d8ProjectileWeightedRandom(),
        new FireColdElectricityPoisonGasOrAcid220rm2ProjectileWeightedRandom(),
        new LightOrDarkness200rm2ProjectileWeightedRandom(),
        new SoundOrExplode230rm2ProjectileWeightedRandom(),
        new WonderProjectileWeightedRandom(),
    };

    public override ItemFlavorGameConfiguration[]? ItemFlavors => new ItemFlavorGameConfiguration[]
    {
        new AgateAmuletItemFlavor(),
        new AmberAmuletItemFlavor(),
        new AzureAmuletItemFlavor(),
        new BoneAmuletItemFlavor(),
        new BrassAmuletItemFlavor(),
        new BronzeAmuletItemFlavor(),
        new CoralAmuletItemFlavor(),
        new CrystalAmuletItemFlavor(),
        new DriftwoodAmuletItemFlavor(),
        new EmeraldAmuletItemFlavor(),
        new GarnetAmuletItemFlavor(),
        new GoldenAmuletItemFlavor(),
        new IvoryAmuletItemFlavor(),
        new ObsidianAmuletItemFlavor(),
        new PewterAmuletItemFlavor(),
        new SapphireAmuletItemFlavor(),
        new SilverAmuletItemFlavor(),
        new TortoiseshellAmuletItemFlavor(),
        new BlackMushroomItemFlavor(),
        new BlackSpottedMushroomItemFlavor(),
        new BlueMushroomItemFlavor(),
        new BrownMushroomItemFlavor(),
        new DarkBlueMushroomItemFlavor(),
        new DarkGreenMushroomItemFlavor(),
        new DarkRedMushroomItemFlavor(),
        new FurryMushroomItemFlavor(),
        new GreenMushroomItemFlavor(),
        new GreyMushroomItemFlavor(),
        new LightBlueMushroomItemFlavor(),
        new LightGreenMushroomItemFlavor(),
        new RedMushroomItemFlavor(),
        new SlimyMushroomItemFlavor(),
        new TanMushroomItemFlavor(),
        new VioletMushroomItemFlavor(),
        new WhiteMushroomItemFlavor(),
        new WhiteSpottedMushroomItemFlavor(),
        new WrinkledMushroomItemFlavor(),
        new YellowMushroomItemFlavor(),
        new AzurePotionItemFlavor(),
        new BlackPotionItemFlavor(),
        new BluePotionItemFlavor(),
        new BlueSpeckledPotionItemFlavor(),
        new BrownPotionItemFlavor(),
        new BrownSpeckledPotionItemFlavor(),
        new BubblingPotionItemFlavor(),
        new ChartreusePotionItemFlavor(),
        new ClearPotionItemFlavor(),
        new ClottedRedPotionItemFlavor(),
        new CloudyPotionItemFlavor(),
        new CoagulatedCrimsonPotionItemFlavor(),
        new CopperSpeckledPotionItemFlavor(),
        new CrimsonPotionItemFlavor(),
        new CyanPotionItemFlavor(),
        new DarkBluePotionItemFlavor(),
        new DarkGreenPotionItemFlavor(),
        new DarkRedPotionItemFlavor(),
        new EffervescentPotionItemFlavor(),
        new GloopyGreenPotionItemFlavor(),
        new GoldPotionItemFlavor(),
        new GoldSpeckledPotionItemFlavor(),
        new GreenPotionItemFlavor(),
        new GreenSpeckledPotionItemFlavor(),
        new GreyPotionItemFlavor(),
        new GreySpeckledPotionItemFlavor(),
        new HazyPotionItemFlavor(),
        new IchorPotionItemFlavor(),
        new IckyGreenPotionItemFlavor(),
        new IndigoPotionItemFlavor(),
        new IvoryWhitePotionItemFlavor(),
        new LightBluePotionItemFlavor(),
        new LightBrownPotionItemFlavor(),
        new LightGreenPotionItemFlavor(),
        new MagentaPotionItemFlavor(),
        new MetallicBluePotionItemFlavor(),
        new MetallicGreenPotionItemFlavor(),
        new MetallicPurplePotionItemFlavor(),
        new MetallicRedPotionItemFlavor(),
        new MistyPotionItemFlavor(),
        new OilyBlackPotionItemFlavor(),
        new OilyYellowPotionItemFlavor(),
        new OrangePotionItemFlavor(),
        new OrangeSpeckledPotionItemFlavor(),
        new PinkPotionItemFlavor(),
        new PinkSpeckledPotionItemFlavor(),
        new PucePotionItemFlavor(),
        new PungentPotionItemFlavor(),
        new PurplePotionItemFlavor(),
        new PurpleSpeckledPotionItemFlavor(),
        new RedPotionItemFlavor(),
        new RedSpeckledPotionItemFlavor(),
        new ShimmeringPotionItemFlavor(),
        new SilverSpeckledPotionItemFlavor(),
        new SkyBluePotionItemFlavor(),
        new SmokyPotionItemFlavor(),
        new StinkingPotionItemFlavor(),
        new TangerinePotionItemFlavor(),
        new VermillionPotionItemFlavor(),
        new VioletPotionItemFlavor(),
        new VioletSpeckledPotionItemFlavor(),
        new ViscousPinkPotionItemFlavor(),
        new WhitePotionItemFlavor(),
        new YellowPotionItemFlavor(),
        new YellowSpeckledPotionItemFlavor(),
        new AdamantiteRingItemFlavor(),
        new AlexandriteRingItemFlavor(),
        new AmethystRingItemFlavor(),
        new AquamarineRingItemFlavor(),
        new AzuriteRingItemFlavor(),
        new BerylRingItemFlavor(),
        new BloodstoneRingItemFlavor(),
        new BoneRingItemFlavor(),
        new BrassRingItemFlavor(),
        new BronzeRingItemFlavor(),
        new CalciteRingItemFlavor(),
        new CarnelianRingItemFlavor(),
        new CorundumRingItemFlavor(),
        new DiamondRingItemFlavor(),
        new DilithiumRingItemFlavor(),
        new DoubleRingItemFlavor(),
        new EmeraldRingItemFlavor(),
        new EngagementRingItemFlavor(),
        new FlouriteRingItemFlavor(),
        new GarnetRingItemFlavor(),
        new GoldRingItemFlavor(),
        new GraniteRingItemFlavor(),
        new JadeRingItemFlavor(),
        new JasperRingItemFlavor(),
        new JetRingItemFlavor(),
        new LapisLazuliRingItemFlavor(),
        new MalachiteRingItemFlavor(),
        new MarbleRingItemFlavor(),
        new MithrilRingItemFlavor(),
        new MoonstoneRingItemFlavor(),
        new ObsidianRingItemFlavor(),
        new OnyxRingItemFlavor(),
        new OpalRingItemFlavor(),
        new PearlRingItemFlavor(),
        new PlainGoldRingItemFlavor(),
        new PlainRingItemFlavor(),
        new PlatinumRingItemFlavor(),
        new QuartziteRingItemFlavor(),
        new QuartzRingItemFlavor(),
        new RhodoniteRingItemFlavor(),
        new RubyRingItemFlavor(),
        new RustyRingItemFlavor(),
        new SapphireRingItemFlavor(),
        new ScarabRingItemFlavor(),
        new SerpentRingItemFlavor(),
        new ShiningRingItemFlavor(),
        new SilverRingItemFlavor(),
        new SpikardRingItemFlavor(),
        new TigerEyeRingItemFlavor(),
        new TopazRingItemFlavor(),
        new TortoiseShellRingItemFlavor(),
        new TransparentRingItemFlavor(),
        new TurquiseRingItemFlavor(),
        new WeddingRingItemFlavor(),
        new WireRingItemFlavor(),
        new WoodenRingItemFlavor(),
        new ZirconRingItemFlavor(),
        new AdamantiteRodItemFlavor(),
        new AluminiumPlatedRodItemFlavor(),
        new AluminiumRodItemFlavor(),
        new BrassRodItemFlavor(),
        new BronzeRodItemFlavor(),
        new CastIronRodItemFlavor(),
        new ChromiumRodItemFlavor(),
        new CopperPlatedRodItemFlavor(),
        new CopperRodItemFlavor(),
        new GoldPlatedRodItemFlavor(),
        new GoldRodItemFlavor(),
        new HexagonalRodItemFlavor(),
        new IronRodItemFlavor(),
        new IvoryRodItemFlavor(),
        new LeadPlatedRodItemFlavor(),
        new LeadRodItemFlavor(),
        new LongRodItemFlavor(),
        new MagnesiumRodItemFlavor(),
        new MithrilPlatedRodItemFlavor(),
        new MithrilRodItemFlavor(),
        new MolybdenumRodItemFlavor(),
        new NickelPlatedRodItemFlavor(),
        new NickelRodItemFlavor(),
        new PlatinumRodItemFlavor(),
        new RunedRodItemFlavor(),
        new RustyRodItemFlavor(),
        new ShortRodItemFlavor(),
        new SilverPlatedRodItemFlavor(),
        new SilverRodItemFlavor(),
        new SteelPlatedRodItemFlavor(),
        new SteelRodItemFlavor(),
        new TinPlatedRodItemFlavor(),
        new TinRodItemFlavor(),
        new TitaniumRodItemFlavor(),
        new TungstenRodItemFlavor(),
        new UridiumRodItemFlavor(),
        new ZincPlatedRodItemFlavor(),
        new ZincRodItemFlavor(),
        new ZirconiumRodItemFlavor(),
        new BeigeScrollItemFlavor(),
        new BrightBeigeScrollItemFlavor(),
        new AshenStaffItemFlavor(),
        new AspenStaffItemFlavor(),
        new BalsaStaffItemFlavor(),
        new BambooStaffItemFlavor(),
        new BanyanStaffItemFlavor(),
        new BirchStaffItemFlavor(),
        new CedarStaffItemFlavor(),
        new CottonwoodStaffItemFlavor(),
        new CypressStaffItemFlavor(),
        new DogwoodStaffItemFlavor(),
        new ElmStaffItemFlavor(),
        new EucalyptusStaffItemFlavor(),
        new GoldenStaffItemFlavor(),
        new HawthornStaffItemFlavor(),
        new HemlockStaffItemFlavor(),
        new HickoryStaffItemFlavor(),
        new IronwoodStaffItemFlavor(),
        new LocustStaffItemFlavor(),
        new MahoganyStaffItemFlavor(),
        new MapleStaffItemFlavor(),
        new MistletoeStaffItemFlavor(),
        new MulberryStaffItemFlavor(),
        new OakStaffItemFlavor(),
        new PineStaffItemFlavor(),
        new RedwoodStaffItemFlavor(),
        new RosewoodStaffItemFlavor(),
        new RunedStaffItemFlavor(),
        new SilverStaffItemFlavor(),
        new SpruceStaffItemFlavor(),
        new SycamoreStaffItemFlavor(),
        new TeakStaffItemFlavor(),
        new WalnutStaffItemFlavor(),
        new AdamantiteWandItemFlavor(),
        new AluminiumPlatedWandItemFlavor(),
        new AluminiumWandItemFlavor(),
        new BrassWandItemFlavor(),
        new BronzeWandItemFlavor(),
        new CastIronWandItemFlavor(),
        new ChromiumWandItemFlavor(),
        new CopperPlatedWandItemFlavor(),
        new CopperWandItemFlavor(),
        new GoldPlatedWandItemFlavor(),
        new GoldWandItemFlavor(),
        new HexagonalWandItemFlavor(),
        new IronWandItemFlavor(),
        new IvoryWandItemFlavor(),
        new LeadPlatedWandItemFlavor(),
        new LeadWandItemFlavor(),
        new LongWandItemFlavor(),
        new MagnesiumWandItemFlavor(),
        new MithrilPlatedWandItemFlavor(),
        new MithrilWandItemFlavor(),
        new MolybdenumWandItemFlavor(),
        new NickelPlatedWandItemFlavor(),
        new NickelWandItemFlavor(),
        new PlatinumWandItemFlavor(),
        new RunedWandItemFlavor(),
        new RustyWandItemFlavor(),
        new ShortWandItemFlavor(),
        new SilverPlatedWandItemFlavor(),
        new SilverWandItemFlavor(),
        new SteelPlatedWandItemFlavor(),
        new SteelWandItemFlavor(),
        new TinPlatedWandItemFlavor(),
        new TinWandItemFlavor(),
        new TitaniumWandItemFlavor(),
        new TungstenWandItemFlavor(),
        new UridiumWandItemFlavor(),
        new ZincPlatedWandItemFlavor(),
        new ZincWandItemFlavor(),
        new ZirconiumWandItemFlavor(),
    };

    
    public override BoolWidgetGameConfiguration[]? BoolWidgets => new BoolWidgetGameConfiguration[]
    {
        new StudyBoolWidget(),
    };

    public override ConditionalWidgetGameConfiguration[]? ConditionalWidgets => new ConditionalWidgetGameConfiguration[]
    {
        new ExperienceLevelConditionalWidget(),
        new ExperiencePointsAtMaxConditionalWidget(),
        new ExperiencePointsForNextLevelConditionalWidget(),
        new ManaConditionalWidget(),
        new PlayerIsHallucinatingTrackedMonsterHealthConditionalWidget(),
        new PlayerTitleConditionalWidget(),
        new TrackedMonsterConditionalWidget(),
        new TrackedMonsterHealthIsAfraidConditionalWidget(),
        new TrackedMonsterHealthIsDeadConditionalWidget(),
        new TrackedMonsterHealthIsFriendlyConditionalWidget(),
        new TrackedMonsterHealthIsInvisibleConditionalWidget(),
        new TrackedMonsterHealthIsSleepingConditionalWidget(),
        new TrapDetectionConditionalWidget(),
        new WinnerConditionalWidget(),
    };

    public override DateWidgetGameConfiguration[]? DateWidgets => new DateWidgetGameConfiguration[]
    {
        new GameDayDateWidget(),
    };

    public override IntWidgetGameConfiguration[]? IntWidgets => new IntWidgetGameConfiguration[]
    {
        new ArmorClassIntWidget(),
        new ExperienceLevelIntWidget(),
        new ExperienceLevelLostIntWidget(),
        new ExperiencePointsForNextLevelIntWidget(),
        new ExperiencePointsForNextLevelLostIntWidget(),
        new GoldIntWidget(),
        new MaxHealthPointsIntWidget(),
        new MaxManaIntWidget(),
    };

    public override MapWidgetGameConfiguration[]? MapWidgets => new MapWidgetGameConfiguration[]
    {
        new DungeonMapWidget(),
    };

    public override MaxRangedWidgetGameConfiguration[]? MaxRangedWidgets => new MaxRangedWidgetGameConfiguration[]
    {
        new HealthPointsMaxRangedWidget(),
        new ManaMaxRangedWidget(),
        new TrackedMonsterHealthMaxRangedWidget(),
    };

    public override RangedWidgetGameConfiguration[]? RangedWidgets => new RangedWidgetGameConfiguration[]
    {
        new AfraidRangedWidget(),
        new BlindnessRangedWidget(),
        new ConfusedRangedWidget(),
        new CutRangedWidget(),
        new HungerRangedWidget(),
        new PoisonedRangedWidget(),
        new StunnedRangedWidget(),
        new TrapCountRangedWidget(),
    };

    public override StringWidgetGameConfiguration[]? StringWidgets => new StringWidgetGameConfiguration[]
    {
        new CharacterSubclassNameStringWidget(),
        new DepthStringWidget(),
        new PlayerNameStringWidget(),
        new RaceTitleStringWidget(),
    };

    public override TextWidgetGameConfiguration[]? TextWidgets => new TextWidgetGameConfiguration[]
    {
        new ArmorClassLabelTextWidget(),
        new ExperienceLevelLabelTextWidget(),
        new ExperienceLevelLostLabelTextWidget(),
        new ExperiencePointsAtMaxTextWidget(),
        new ExperiencePointsLabelTextWidget(),
        new GameDateLabelTextWidget(),
        new GameTimeLabelTextWidget(),
        new GoldLabelTextWidget(),
        new HealthPointsLabelTextWidget(),
        new ManaLabelTextWidget(),
        new MaxHealthPointsLabelTextWidget(),
        new MaxManaLabelTextWidget(),
        new NoTrackedMonsterHealthTextWidget(),
        new NoTrapsDetectedTextWidget(),
        new PlayerTitleTextWidget(),
        new TrackedMonsterHealthIsAfraidTextWidget(),
        new TrackedMonsterHealthIsFriendlyTextWidget(),
        new TrackedMonsterHealthIsSleepingTextWidget(),
        new TrackedMonsterHealthUnknownTextWidget(),
        new WinnerTitleTextWidget(),
        new WizardTitleTextWidget(),
    };

    public override TimeWidgetGameConfiguration[]? TimeWidgets => new TimeWidgetGameConfiguration[]
    {
        new GameTimeOfDayTimeWidget(),
    };

    public override NullableStringsTextAreaWidgetGameConfiguration[]? NullableStringsTextAreaWidgets => new NullableStringsTextAreaWidgetGameConfiguration[]
    {
        new TrackedMonsterRaceNameNullableStringsTextAreaWidget(),
    };

    public override ShopkeeperGameConfiguration[]? Shopkeepers => new ShopkeeperGameConfiguration[]
    {
        new AbiemarThePeasantShopkeeper(),
        new AchsheTheTentacledShopkeeper(),
        new AdirathTheUnmagicalShopkeeper(),
        new AfardorfTheBrigandShopkeeper(),
        new AgnarTheEnchantressShopkeeper(),
        new AldousTheSleepyShopkeeper(),
        new AlliaTheServileShopkeeper(),
        new AnastasiaTheLuminousShopkeeper(),
        new AngelShopkeeper(),
        new AnimusShopkeeper(),
        new AraakaTheRotundShopkeeper(),
        new ArkhothTheStoutShopkeeper(),
        new ArndalBeastSlayerShopkeeper(),
        new ArnoldTheBeastlyShopkeeper(),
        new ArunikkiGreatclawShopkeeper(),
        new AsenathShopkeeper(),
        new AsenathTheHolyShopkeeper(),
        new AsuunuTheLearnedShopkeeper(),
        new AtalTheWiseShopkeeper(),
        new BaldOgginShopkeeper(),
        new BalennWarDancerShopkeeper(),
        new BarbagTheSlyShopkeeper(),
        new BathricTheColdShopkeeper(),
        new BatrachianBelleShopkeeper(),
        new BaurkTheBusyShopkeeper(),
        new BiliousTheToadShopkeeper(),
        new BobShopkeeper(),
        new BodrilTheSeerShopkeeper(),
        new BuggerbyTheGreatShopkeeper(),
        new BulianceTheNecromancerShopkeeper(),
        new ButchShopkeeper(),
        new CaydTheSweetShopkeeper(),
        new ChaeandThePoorShopkeeper(),
        new CharityTheNecromancerShopkeeper(),
        new CinaTheRogueShopkeeper(),
        new CorpselightShopkeeper(),
        new CrediricTheBrewerShopkeeper(),
        new CthoalothTheMysticShopkeeper(),
        new DardobardTheWeakShopkeeper(),
        new DargLowTheGrimShopkeeper(),
        new DeathchillShopkeeper(),
        new DeathMaskShopkeeper(),
        new DecadoTheHandsomeShopkeeper(),
        new DelicatusShopkeeper(),
        new DerigrinTheHonestShopkeeper(),
        new DomliTheHumbleShopkeeper(),
        new DrakoFairdealShopkeeper(),
        new DrangShopkeeper(),
        new DrewTheSkilledShopkeeper(),
        new DridashTheAlchemistShopkeeper(),
        new DriosTheFaintShopkeeper(),
        new DrocusSpiderfriendShopkeeper(),
        new DryBonesShopkeeper(),
        new EdorTheShortShopkeeper(),
        new EgbertTheOldShopkeeper(),
        new ElberethTheBeautifulShopkeeper(),
        new ElelenTheTelepathShopkeeper(),
        new EllefrisThePaladinShopkeeper(),
        new EllisTheFoolShopkeeper(),
        new EloDragonscaleShopkeeper(),
        new EloiseLongDeadShopkeeper(),
        new ElvererithTheCheatShopkeeper(),
        new EmptyLotShopkeeper(),
        new EowilithTheFairShopkeeper(),
        new EramogTheWeakShopkeeper(),
        new ErashnakTheMidgetShopkeeper(),
        new EridishShopkeeper(),
        new EtheraaTheFuriousShopkeeper(),
        new FalarewynShopkeeper(),
        new FalebrimborShopkeeper(),
        new FalilmawenTheFriendlyShopkeeper(),
        new FanelathTheCautiousShopkeeper(),
        new FasgulShopkeeper(),
        new FazzilTheDarkShopkeeper(),
        new FeatherwingShopkeeper(),
        new FelilGandTheSubtleShopkeeper(),
        new FelorfiliandShopkeeper(),
        new FilbertTheHungryShopkeeper(),
        new FinakShopkeeper(),
        new FlitterShopkeeper(),
        new FlotsamTheBloatedShopkeeper(),
        new FootsoreTheLuckyShopkeeper(),
        new ForovirTheCheapShopkeeper(),
        new FthnarglPsathigguaShopkeeper(),
        new FthogloTheDemonicistShopkeeper(),
        new FulirTheDarkShopkeeper(),
        new FundiTheSlowShopkeeper(),
        new FungusGiantSlayerShopkeeper(),
        new FurfaceYeekShopkeeper(),
        new FurfootPobberShopkeeper(),
        new GadrialdurTheFairShopkeeper(),
        new GagrinMoneylenderShopkeeper(),
        new GalilGamirShopkeeper(),
        new GandarTheNeutralShopkeeper(),
        new GelaraldorTheHerbmasterShopkeeper(),
        new GlarunaBrandybreathShopkeeper(),
        new GloomThePhlegmaticShopkeeper(),
        new GobblegutsThunderbreathShopkeeper(),
        new GranthusShopkeeper(),
        new GrarakTheHospitableShopkeeper(),
        new GriellaHumanslayerShopkeeper(),
        new GruceTheHugeShopkeeper(),
        new GrugTheComelyShopkeeper(),
        new GrumbleworthShopkeeper(),
        new GrundyTheTallShopkeeper(),
        new GunnarThePaladinShopkeeper(),
        new HallOfRecordsShopkeeper(),
        new HanekaTheSmallShopkeeper(),
        new HaobTheBerserkerShopkeeper(),
        new HashnikTheDruidShopkeeper(),
        new HelgaTheLostShopkeeper(),
        new HerranythTheRuthlessShopkeeper(),
        new HesinSwordmasterShopkeeper(),
        new HetoTheNecromancerShopkeeper(),
        new HooshnakTheViciousShopkeeper(),
        new HorbagTheUncleanShopkeeper(),
        new HoshakTheDarkShopkeeper(),
        new HuimogBalrogSlayerShopkeeper(),
        new HurkThePoorShopkeeper(),
        new IbeliTheIllusionistShopkeeper(),
        new IbeniddTheChasteShopkeeper(),
        new IsedreliasShopkeeper(),
        new IsungTheLordShopkeeper(),
        new JakeSmallShopkeeper(),
        new JalEthTheAlchemistShopkeeper(),
        new JanaakaTheShiftyShopkeeper(),
        new KakalrakakalShopkeeper(),
        new KazaTheNobleShopkeeper(),
        new KeldornTheGrandShopkeeper(),
        new KirakakShopkeeper(),
        new KiriarikirkShopkeeper(),
        new KleibonsShopkeeper(),
        new KonDarTheUglyShopkeeper(),
        new KrikkikShopkeeper(),
        new KtrrikkShopkeeper(),
        new KynTheTreacherousShopkeeper(),
        new KyriaTheIllusionistShopkeeper(),
        new LathaxlTheGreedyShopkeeper(),
        new LoirinTheMadShopkeeper(),
        new LonaTheCharismaticShopkeeper(),
        new LoraxTheSuaveShopkeeper(),
        new LordFilbertShopkeeper(),
        new LudwigTheHumbleShopkeeper(),
        new LuminTheBlueShopkeeper(),
        new LumwiseTheMadShopkeeper(),
        new MadishTheSmartShopkeeper(),
        new MagdTheRuthlessShopkeeper(),
        new MalvusShopkeeper(),
        new MarokaTheAgedShopkeeper(),
        new MauserTheChemistShopkeeper(),
        new McKinnonShopkeeper(),
        new MerullaTheHumbleShopkeeper(),
        new MistressChastityShopkeeper(),
        new MordsanShopkeeper(),
        new MorivalTheWildShopkeeper(),
        new MuirtTheVirtuousShopkeeper(),
        new MunkTheBartererShopkeeper(),
        new NadocTheStrongShopkeeper(),
        new NafurTheWoodenShopkeeper(),
        new NarlockShopkeeper(),
        new NievalShopkeeper(),
        new NikkiTheNecromancerShopkeeper(),
        new NinarTheStoopedShopkeeper(),
        new NydudusTheSlowShopkeeper(),
        new OddoYeeksonShopkeeper(),
        new OdnarTheSageShopkeeper(),
        new OdThePennilessShopkeeper(),
        new OglignDragonSlayerShopkeeper(),
        new OlelaldanTheWiseShopkeeper(),
        new OlvarBookwormShopkeeper(),
        new OrraxDragonsonShopkeeper(),
        new OsseinTheLiterateShopkeeper(),
        new PaetlanTheAlcoholicShopkeeper(),
        new ParrishTheBloodthirstyShopkeeper(),
        new PeadusTheCruelShopkeeper(),
        new PhilanthropusShopkeeper(),
        new PoogorTheDumbShopkeeper(),
        new PorcinaTheObeseShopkeeper(),
        new PrendegastShopkeeper(),
        new PrenticeTheTrustedShopkeeper(),
        new PrirandTheDeadShopkeeper(),
        new ProogdishTheYouthfullShopkeeper(),
        new PugnaciousThePugilistShopkeeper(),
        new QuickArmVollaireShopkeeper(),
        new QuirmbyTheStrangeShopkeeper(),
        new RanalarTheSweetShopkeeper(),
        new RandolphCarterShopkeeper(),
        new RiathoTheJugglerShopkeeper(),
        new RilinTheQuietShopkeeper(),
        new RodishTheChaoticShopkeeper(),
        new RonarTheIronShopkeeper(),
        new RorbagBookEaterShopkeeper(),
        new RoshaThePatientShopkeeper(),
        new RuncieTheInsaneShopkeeper(),
        new SaraiTheSwiftShopkeeper(),
        new SarlethTheSneakyShopkeeper(),
        new SarlyasTheRottenShopkeeper(),
        new SasinTheBoldShopkeeper(),
        new SelaxisShopkeeper(),
        new SevirasTheMindcrafterShopkeeper(),
        new ShallowgraveShopkeeper(),
        new ShortAlShopkeeper(),
        new SidriaLighfingeredShopkeeper(),
        new SilentFaldusShopkeeper(),
        new SilverscaleShopkeeper(),
        new SirParsivalThePureShopkeeper(),
        new SkidneyTheSorcererShopkeeper(),
        new SoalinTheWretchedShopkeeper(),
        new SolostoranShopkeeper(),
        new StraashaShopkeeper(),
        new TaenTheAlchemistShopkeeper(),
        new ThalegordTheShamanShopkeeper(),
        new ThramborTheGrubbyShopkeeper(),
        new TuethicBareBonesShopkeeper(),
        new ValindraTheProudShopkeeper(),
        new VamogSlayerShopkeeper(),
        new VanthylasTheLearnedShopkeeper(),
        new VegnarOneEyeShopkeeper(),
        new VeloinTheQuietShopkeeper(),
        new VengellaTheCruelShopkeeper(),
        new VhassaTheDeadShopkeeper(),
        new VileShopkeeper(),
        new VoirinTheCowardlyShopkeeper(),
        new VrudushTheShamanShopkeeper(),
        new VuirakTheHighMageShopkeeper(),
        new WizzleTheChaoticShopkeeper(),
        new WutoPoisonbreathShopkeeper(),
        new WyranaTheMightyShopkeeper(),
        new XarillusShopkeeper(),
        new XaxShopkeeper(),
        new XochinagguaShopkeeper(),
        new YaarjukkaDemonspawnShopkeeper(),
        new YojoIIShopkeeper(),
        new YourHomeShopkeeper(),
        new ZzathathTheImpShopkeeper(),
    };
}
