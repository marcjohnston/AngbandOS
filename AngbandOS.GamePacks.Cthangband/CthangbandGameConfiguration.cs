// AngbandOS: 2022 Marc Johnston
//
// This game is released under the “Angband License”, defined as: “© 1997 Ben Harrison, James E.
// Wilson, Robert A. Koeneke This software may be copied and distributed for educational, research,
// and not for profit purposes provided that this copyright and statement are included in all such
// copies. Other copyrights may also apply.”

namespace AngbandOS.GamePacks.Cthangband;

public class CthangbandGameConfiguration : GameConfiguration
{
    public override string[]? GoldFactoriesBindingKeys => new string[]
    {
        "CopperGoldItemFactory",
        "Copper1GoldItemFactory",
        "Copper2GoldItemFactory",
        "PieceOfSilverGoldItemFactory",
        "Silver1GoldItemFactory",
        "Silver2GoldItemFactory",
        "SomeGarnetsGoldItemFactory",
        "LotOfGarnetsGoldItemFactory",
        "GoldGoldItemFactory",
        "SomeGoldGoldItemFactory",
        "LotOfGoldGoldItemFactory",
        "OpalsGoldItemFactory",
        "SapphiresGoldItemFactory",
        "RubiesGoldItemFactory",
        "DiamondsGoldItemFactory",
        "EmeraldsGoldItemFactory",
        "MithrilGoldItemFactory",
        "AdamantiteGoldItemFactory"
    };

    public override HelpGroupGameConfiguration[]? HelpGroups => new HelpGroupGameConfiguration[]
    {
        new WizardCharacterEditingHelpGroup(),
        new WizardGeneralCommandsHelpGroup(),
        new WizardMonstersHelpGroup(),
        new WizardMovementHelpGroup(),
        new WizardObjectCommandsHelpGroup()
    };

    public override SymbolGameConfiguration[]? Symbols => new SymbolGameConfiguration[]
    {
        new AmpersandSymbol(),
        new AsteriskSymbol(),
        new AtSymbol(),
        new BackSlashSymbol(),
        new CaretSymbol(),
        new CloseBraceSymbol(),
        new CloseBracketSymbol(),
        new CloseParenthesisSymbol(),
        new ColonSymbol(),
        new CommaSymbol(),
        new DollarSignSymbol(),
        new DoubleQuoteSymbol(),
        new EqualSignSymbol(),
        new ExclamationPointSymbol(),
        new ForwardSlashSymbol(),
        new GreaterThanSymbol(),
        new LessThanSymbol(),
        new LowerASymbol(),
        new LowerBSymbol(),
        new LowerCSymbol(),
        new LowerDSymbol(),
        new LowerESymbol(),
        new LowerFSymbol(),
        new LowerGSymbol(),
        new LowerHSymbol(),
        new LowerISymbol(),
        new LowerJSymbol(),
        new LowerKSymbol(),
        new LowerLSymbol(),
        new LowerMSymbol(),
        new LowerNSymbol(),
        new LowerOSymbol(),
        new LowerPSymbol(),
        new LowerQSymbol(),
        new LowerRSymbol(),
        new LowerSSymbol(),
        new LowerTSymbol(),
        new LowerUSymbol(),
        new LowerVSymbol(),
        new LowerWSymbol(),
        new LowerXSymbol(),
        new LowerYSymbol(),
        new LowerZSymbol(),
        new LowerASymbol(),
        new MinusSignSymbol(),
        new NumberEightSymbol(),
        new NumberFiveSymbol(),
        new NumberFourSymbol(),
        new NumberNineSymbol(),
        new NumberOneSymbol(),
        new NumberSevenSymbol(),
        new NumberSixSymbol(),
        new NumberThreeSymbol(),
        new NumberTwoSymbol(),
        new NumberZeroSymbol(),
        new OpenBraceSymbol(),
        new OpenBracketSymbol(),
        new OpenParenthesisSymbol(),
        new PercentSignSymbol(),
        new PeriodSymbol(),
        new PlusSignSymbol(),
        new PoundSignSymbol(),
        new QuestionMarkSymbol(),
        new SemiColonSymbol(),
        new SingleQuoteSymbol(),
        new SpaceBarSymbol(),
        new TildeSymbol(),
        new UnderscoreSymbol(),
        new UpperASymbol(),
        new UpperBSymbol(),
        new UpperCSymbol(),
        new UpperDSymbol(),
        new UpperESymbol(),
        new UpperFSymbol(),
        new UpperGSymbol(),
        new UpperHSymbol(),
        new UpperISymbol(),
        new UpperJSymbol(),
        new UpperKSymbol(),
        new UpperLSymbol(),
        new UpperMSymbol(),
        new UpperOSymbol(),
        new UpperPSymbol(),
        new UpperQSymbol(),
        new UpperRSymbol(),
        new UpperSSymbol(),
        new UpperTSymbol(),
        new UpperUSymbol(),
        new UpperVSymbol(),
        new UpperWSymbol(),
        new UpperXSymbol(),
        new UpperYSymbol(),
        new UpperZSymbol(),
        new VerticalBarSymbol()
    };

    public override SyllableSetGameConfiguration[]? SyllableSets => new SyllableSetGameConfiguration[]
    {
        new AngelicSyllableSet(),
        new CthuloidSyllableSet(),
        new DwarvenSyllableSet(),
        new ElvishSyllableSet(),
        new GnomishSyllableSet(),
        new HobbitSyllableSet(),
        new HumanSyllableSet(),
        new KlackonSyllableSet(),
        new OrcishSyllableSet(),
        new YeekishSyllableSet()
    };

    public override VaultGameConfiguration[]? Vaults => new VaultGameConfiguration[]
    {
        new BubblesVault(),
        new CastleDeathVault(),
        new ConcentricityVault(),
        new CurlicuesOneVault(),
        new CycloneVault(),
        new DarwinismVault(),
        new FalseWallVault(),
        new FunnelVault(),
        new GreaterVaultAbsolutelyHugeVault(),
        new GreaterVaultAnotherNethackStyleCastleVault(),
        new GreaterVaultButterflyVault(),
        new GreaterVaultCastleVault(),
        new GreaterVaultChambersVault(),
        new GreaterVaultDerElBahriVault(),
        new GreaterVaultDividedVault(),
        new GreaterVaultDivisiVault(),
        new GreaterVaultGreaterCastleVault(),
        new GreaterVaultGreatSpiralVault(),
        new GreaterVaultHugeVault(),
        new GreaterVaultHypostyleOfRamsesIIIVault(),
        new GreaterVaultKarnakPartIVault(),
        new GreaterVaultKomOmboVault(),
        new GreaterVaultLargeVault(),
        new GreaterVaultMortuaryTempleOfSetyVault(),
        new GreaterVaultNethackBuildingVault(),
        new GreaterVaultNethackCastleAlmostVault(),
        new GreaterVaultNethackHellLevel1Vault(),
        new GreaterVaultNethackHellLevel2Vault(),
        new GreaterVaultNethackHellLevel3Vault(),
        new GreaterVaultNethackLargeCityVault(),
        new GreaterVaultNethackMirrorVault(),
        new GreaterVaultNethackSamuraiCastle2Vault(),
        new GreaterVaultNethackSamuraiCastleVault(),
        new GreaterVaultNethackSpiralVault(),
        new GreaterVaultNethackTombVault(),
        new GreaterVaultPattern2Vault(),
        new GreaterVaultSierpinskiVault(),
        new GreaterVaultSpiralCastleVault(),
        new GreaterVaultSubdivisionsVault(),
        new GreaterVaultTitanicVault(),
        new GreaterVaultTwistedCubeVault(),
        new GreaterVaultUniversityVault(),
        new HellpitVault(),
        new JigsawVault(),
        new LesserVaultAmadaTempleVault(),
        new LesserVaultAmenhotepIVault(),
        new LesserVaultArenaVault(),
        new LesserVaultBankVault(),
        new LesserVaultBelvoirKeepVault(),
        new LesserVaultBrainsLairVault(),
        new LesserVaultCamouflagedVault(),
        new LesserVaultcampVault(),
        new LesserVaultcelticVault(),
        new LesserVaultCentralVault(),
        new LesserVaultCrossVault(),
        new LesserVaultderElBahriSanctuaryVault(),
        new LesserVaultdiagonalVault(),
        new LesserVaulteasterEggVault(),
        new LesserVaultedfuVault(),
        new LesserVaulthathorChapelVault(),
        new LesserVaulthospitalWardVault(),
        new LesserVaultKarnakPartIIVault(),
        new LesserVaultlayersVault(),
        new LesserVaultlesserCryptVault(),
        new LesserVaultmazeOfRoomsVault(),
        new LesserVaultmazeVault(),
        new LesserVaultmineVault(),
        new LesserVaultmirrorVault(),
        new LesserVaultmonsterWcVault(),
        new LesserVaultnethackCityVault(),
        new LesserVaultnethackHeadVault(),
        new LesserVaultnethackRoomsVault(),
        new LesserVaultnethackSpiralRoomsVault(),
        new LesserVaultnethackStyleTowerVault(),
        new LesserVaultnethackTinyCastleVault(),
        new LesserVaultnotandVault(),
        new LesserVaultoctagonVault(),
        new LesserVaultosirisHallsVault(),
        new LesserVaultoverlapVault(),
        new LesserVaultPatternVault(),
        new LesserVaultprisonVault(),
        new LesserVaultRoomsVault(),
        new LesserVaultroundVault(),
        new LesserVaultserpentVault(),
        new LesserVaultspiralVault(),
        new LesserVaultsquareVault(),
        new LesserVaulttempleAtAbydosVault(),
        new LesserVaulttempleOfDenderehVault(),
        new LesserVaulttempleOfSetyVault(),
        new LesserVaulttetrisTilesVault(),
        new LesserVaulttowerVault(),
        new LesserVaultxFactorVault(),
        new LesserVaultyinYangVault(),
        new LesserVaultzelaznyVault(),
        new LVTurnaboutVault(),
        new MiniatureCellVault(),
        new MirroredQuartetVault(),
        new ModifiedGreaterVaultHugeVault(),
        new PlanetXVault(),
        new RockHardVault(),
        new RoundaboutsOneVault(),
        new RoundaboutThreeVault(),
        new RoundaboutTwoVault(),
        new SnakeMazeVault(),
        new TargetPracticeVault(),
        new TheBankFromHellVault(),
        new TheIInTheStormVault(),
        new TheRewardIsWorthItVault()
    };

    public override PluralGameConfiguration[]? Plurals => new PluralGameConfiguration[]
    {
        new BootsPlural(),
        new GlovesPlural(),
        new GoldPlural(),
        new JunkPlural()
    };

    public override ProjectileGraphicGameConfiguration[]? ProjectileGraphics => new ProjectileGraphicGameConfiguration[]
    {
        new BeigeBoltProjectileGraphic(),
        new BeigeBulletProjectileGraphic(),
        new BeigeSplatProjectileGraphic(),
        new BlackBoltProjectileGraphic(),
        new BlackBulletProjectileGraphic(),
        new BlackSplatProjectileGraphic(),
        new BlueBoltProjectileGraphic(),
        new BlueBulletProjectileGraphic(),
        new BlueSplatProjectileGraphic(),
        new BrightBeigeBoltProjectileGraphic(),
        new BrightBeigeBulletProjectileGraphic(),
        new BrightBeigeSplatProjectileGraphic(),
        new BrightBlueBoltProjectileGraphic(),
        new BrightBlueBulletProjectileGraphic(),
        new BrightBlueSplatProjectileGraphic(),
        new BrightBrownBoltProjectileGraphic(),
        new BrightBrownBulletProjectileGraphic(),
        new BrightBrownSplatProjectileGraphic(),
        new BrightChartreuseBoltProjectileGraphic(),
        new BrightChartreuseBulletProjectileGraphic(),
        new BrightChartreuseSplatProjectileGraphic(),
        new BrightGreenBoltProjectileGraphic(),
        new BrightGreenBulletProjectileGraphic(),
        new BrightGreenSplatProjectileGraphic(),
        new BrightGreyBoltProjectileGraphic(),
        new BrightGreyBulletProjectileGraphic(),
        new BrightGreySplatProjectileGraphic(),
        new BrightOrangeBoltProjectileGraphic(),
        new BrightOrangeBulletProjectileGraphic(),
        new BrightOrangeSplatProjectileGraphic(),
        new BrightPinkBoltProjectileGraphic(),
        new BrightPinkBulletProjectileGraphic(),
        new BrightPinkSplatProjectileGraphic(),
        new BrightPurpleBoltProjectileGraphic(),
        new BrightPurpleBulletProjectileGraphic(),
        new BrightPurpleSplatProjectileGraphic(),
        new BrightRedBoltProjectileGraphic(),
        new BrightRedBulletProjectileGraphic(),
        new BrightRedSplatProjectileGraphic(),
        new BrightTurquoiseBoltProjectileGraphic(),
        new BrightTurquoiseBulletProjectileGraphic(),
        new BrightTurquoiseSplatProjectileGraphic(),
        new BrightWhiteBoltProjectileGraphic(),
        new BrightWhiteBulletProjectileGraphic(),
        new BrightWhiteSplatProjectileGraphic(),
        new BrightYellowBoltProjectileGraphic(),
        new BrightYellowBulletProjectileGraphic(),
        new BrightYellowSplatProjectileGraphic(),
        new BrownBoltProjectileGraphic(),
        new BrownBulletProjectileGraphic(),
        new BrownSplatProjectileGraphic(),
        new ChartreuseBoltProjectileGraphic(),
        new ChartreuseBulletProjectileGraphic(),
        new ChartreuseSplatProjectileGraphic(),
        new CopperBoltProjectileGraphic(),
        new CopperBulletProjectileGraphic(),
        new CopperSplatProjectileGraphic(),
        new DiamondBoltProjectileGraphic(),
        new DiamondBulletProjectileGraphic(),
        new DiamondSplatProjectileGraphic(),
        new GoldBoltProjectileGraphic(),
        new GoldBulletProjectileGraphic(),
        new GoldSplatProjectileGraphic(),
        new GreenBoltProjectileGraphic(),
        new GreenBulletProjectileGraphic(),
        new GreenSplatProjectileGraphic(),
        new GreyBoltProjectileGraphic(),
        new GreyBulletProjectileGraphic(),
        new GreySplatProjectileGraphic(),
        new OrangeBoltProjectileGraphic(),
        new OrangeBulletProjectileGraphic(),
        new OrangeSplatProjectileGraphic(),
        new PinkBoltProjectileGraphic(),
        new PinkBulletProjectileGraphic(),
        new PinkSplatProjectileGraphic(),
        new PurpleBoltProjectileGraphic(),
        new PurpleBulletProjectileGraphic(),
        new PurpleSplatProjectileGraphic(),
        new RedBoltProjectileGraphic(),
        new RedBulletProjectileGraphic(),
        new RedSplatProjectileGraphic(),
        new SilverBoltProjectileGraphic(),
        new SilverBulletProjectileGraphic(),
        new SilverSplatProjectileGraphic(),
        new TurquoiseBoltProjectileGraphic(),
        new TurquoiseBulletProjectileGraphic(),
        new TurquoiseSplatProjectileGraphic(),
        new WhiteBoltProjectileGraphic(),
        new WhiteBulletProjectileGraphic(),
        new WhiteSplatProjectileGraphic(),
        new YellowBoltProjectileGraphic(),
        new YellowBulletProjectileGraphic(),
        new YellowSplatProjectileGraphic()
    };

    public override AnimationGameConfiguration[]? Animations => new AnimationGameConfiguration[]
    {
        new BeigeCloudAnimation(),
        new BeigeContractAnimation(),
        new BeigeControlAnimation(),
        new BeigeExpandAnimation(),
        new BeigeQuestionAnimation(),
        new BeigeSparkleAnimation(),
        new BeigeSwirlAnimation(),
        new BlackCloudAnimation(),
        new BlackContractAnimation(),
        new BlackControlAnimation(),
        new BlackExpandAnimation(),
        new BlackFlashAnimation(),
        new BlackQuestionAnimation(),
        new BlackSparkleAnimation(),
        new BlackSwirlAnimation(),
        new BlackWhiteFlashAnimation(),
        new BlueCloudAnimation(),
        new BlueContractAnimation(),
        new BlueControlAnimation(),
        new BlueExpandAnimation(),
        new BlueFlashAnimation(),
        new BlueQuestionAnimation(),
        new BlueSparkleAnimation(),
        new BlueSwirlAnimation(),
        new BrightBeigeCloudAnimation(),
        new BrightBeigeContractAnimation(),
        new BrightBeigeExpandAnimation(),
        new BrightBeigeSparkleAnimation(),
        new BrightBeigeSwirlAnimation(),
        new BrightBlueCloudAnimation(),
        new BrightBlueContractAnimation(),
        new BrightBlueExpandAnimation(),
        new BrightBlueSparkleAnimation(),
        new BrightBlueSwirlAnimation(),
        new BrightBrownCloudAnimation(),
        new BrightBrownContractAnimation(),
        new BrightBrownExpandAnimation(),
        new BrightBrownSparkleAnimation(),
        new BrightBrownSwirlAnimation(),
        new BrightChartreuseCloudAnimation(),
        new BrightChartreuseContractAnimation(),
        new BrightChartreuseExpandAnimation(),
        new BrightChartreuseSparkleAnimation(),
        new BrightChartreuseSwirlAnimation(),
        new BrightGreenCloudAnimation(),
        new BrightGreenContractAnimation(),
        new BrightGreenExpandAnimation(),
        new BrightGreenSparkleAnimation(),
        new BrightGreenSwirlAnimation(),
        new BrightGreyCloudAnimation(),
        new BrightGreyContractAnimation(),
        new BrightGreyExpandAnimation(),
        new BrightGreySparkleAnimation(),
        new BrightGreySwirlAnimation(),
        new BrightOrangeCloudAnimation(),
        new BrightOrangeContractAnimation(),
        new BrightOrangeExpandAnimation(),
        new BrightOrangeSparkleAnimation(),
        new BrightOrangeSwirlAnimation(),
        new BrightPinkCloudAnimation(),
        new BrightPinkContractAnimation(),
        new BrightPinkExpandAnimation(),
        new BrightPinkSparkleAnimation(),
        new BrightPinkSwirlAnimation(),
        new BrightPurpleCloudAnimation(),
        new BrightPurpleContractAnimation(),
        new BrightPurpleExpandAnimation(),
        new BrightPurpleSparkleAnimation(),
        new BrightPurpleSwirlAnimation(),
        new BrightRedCloudAnimation(),
        new BrightRedContractAnimation(),
        new BrightRedExpandAnimation(),
        new BrightRedSparkleAnimation(),
        new BrightRedSwirlAnimation(),
        new BrightTurquoiseCloudAnimation(),
        new BrightTurquoiseContractAnimation(),
        new BrightTurquoiseExpandAnimation(),
        new BrightTurquoiseSparkleAnimation(),
        new BrightTurquoiseSwirlAnimation(),
        new BrightWhiteCloudAnimation(),
        new BrightWhiteContractAnimation(),
        new BrightWhiteExpandAnimation(),
        new BrightWhiteSparkleAnimation(),
        new BrightWhiteSwirlAnimation(),
        new BrightYellowCloudAnimation(),
        new BrightYellowContractAnimation(),
        new BrightYellowExpandAnimation(),
        new BrightYellowSparkleAnimation(),
        new BrightYellowSwirlAnimation(),
        new BrownCloudAnimation(),
        new BrownContractAnimation(),
        new BrownControlAnimation(),
        new BrownExpandAnimation(),
        new BrownFlashAnimation(),
        new BrownQuestionAnimation(),
        new BrownSparkleAnimation(),
        new BrownSwirlAnimation(),
        new ChartreuseCloudAnimation(),
        new ChartreuseContractAnimation(),
        new ChartreuseControlAnimation(),
        new ChartreuseExpandAnimation(),
        new ChartreuseFlashAnimation(),
        new ChartreuseQuestionAnimation(),
        new ChartreuseSparkleAnimation(),
        new ChartreuseSwirlAnimation(),
        new CopperCloudAnimation(),
        new CopperContractAnimation(),
        new CopperExpandAnimation(),
        new CopperSparkleAnimation(),
        new CopperSwirlAnimation(),
        new DiamondCloudAnimation(),
        new DiamondContractAnimation(),
        new DiamondExpandAnimation(),
        new DiamondSparkleAnimation(),
        new DiamondSwirlAnimation(),
        new GoldCloudAnimation(),
        new GoldContractAnimation(),
        new GoldExpandAnimation(),
        new GoldSparkleAnimation(),
        new GoldSwirlAnimation(),
        new GreenCloudAnimation(),
        new GreenContractAnimation(),
        new GreenControlAnimation(),
        new GreenExpandAnimation(),
        new GreenFlashAnimation(),
        new GreenPurpleFlashAnimation(),
        new GreenQuestionAnimation(),
        new GreenSparkleAnimation(),
        new GreenSwirlAnimation(),
        new GreyCloudAnimation(),
        new GreyContractAnimation(),
        new GreyControlAnimation(),
        new GreyExpandAnimation(),
        new GreyFlashAnimation(),
        new GreyQuestionAnimation(),
        new GreySparkleAnimation(),
        new GreySwirlAnimation(),
        new OrangeCloudAnimation(),
        new OrangeContractAnimation(),
        new OrangeControlAnimation(),
        new OrangeExpandAnimation(),
        new OrangeFlashAnimation(),
        new OrangeQuestionAnimation(),
        new OrangeSparkleAnimation(),
        new OrangeSwirlAnimation(),
        new PinkChartreuseFlashAnimation(),
        new PinkCloudAnimation(),
        new PinkContractAnimation(),
        new PinkControlAnimation(),
        new PinkExpandAnimation(),
        new PinkFlashAnimation(),
        new PinkPurpleFlashAnimation(),
        new PinkQuestionAnimation(),
        new PinkSparkleAnimation(),
        new PinkSwirlAnimation(),
        new PurpleCloudAnimation(),
        new PurpleContractAnimation(),
        new PurpleControlAnimation(),
        new PurpleExpandAnimation(),
        new PurpleFlashAnimation(),
        new PurpleQuestionAnimation(),
        new PurpleSparkleAnimation(),
        new PurpleSwirlAnimation(),
        new RedBlackFlashAnimation(),
        new RedCloudAnimation(),
        new RedContractAnimation(),
        new RedControlAnimation(),
        new RedExpandAnimation(),
        new RedFlashAnimation(),
        new RedOrangeFlashAnimation(),
        new RedQuestionAnimation(),
        new RedSparkleAnimation(),
        new RedSwirlAnimation(),
        new RedTurquoiseFlashAnimation(),
        new RedWhiteFlashAnimation(),
        new RedYellowFlashAnimation(),
        new SilverCloudAnimation(),
        new SilverContractAnimation(),
        new SilverExpandAnimation(),
        new SilverSparkleAnimation(),
        new SilverSwirlAnimation(),
        new TurquoiseCloudAnimation(),
        new TurquoiseContractAnimation(),
        new TurquoiseControlAnimation(),
        new TurquoiseExpandAnimation(),
        new TurquoiseFlashAnimation(),
        new TurquoiseQuestionAnimation(),
        new TurquoiseSparkleAnimation(),
        new TurquoiseSwirlAnimation(),
        new WhiteCloudAnimation(),
        new WhiteContractAnimation(),
        new WhiteControlAnimation(),
        new WhiteExpandAnimation(),
        new WhiteFlashAnimation(),
        new WhiteQuestionAnimation(),
        new WhiteSparkleAnimation(),
        new WhiteSwirlAnimation(),
        new YellowBlueFlashAnimation(),
        new YellowCloudAnimation(),
        new YellowContractAnimation(),
        new YellowControlAnimation(),
        new YellowExpandAnimation(),
        new YellowFlashAnimation(),
        new YellowQuestionAnimation(),
        new YellowSparkleAnimation(),
        new YellowSwirlAnimation()
    };

    public override string[]? ElvishTexts => new string[]
    {
        "adan", "ael", "in", "agl", "ar", "aina", "alda", "al", "qua", "am", "arth", "amon", "anca", "an", "dune",
        "anga", "anna", "ann", "on", "ar", "ien", "atar", "band", "bar", "ad", "bel", "eg", "brag", "ol", "breth",
        "il", "brith", "cal", "en", "gal", "en", "cam", "car", "ak", "cel", "eb", "cor", "on", "cu", "cui", "vie",
        "cul", "curu", "dae", "dag", "or", "del", "din", "dol", "dor", "draug", "du", "duin", "dur", "ear", "ech",
        "or", "edh", "el", "eith", "elen", "er", "ereg", "es", "gal", "fal", "as", "far", "oth", "faug", "fea",
        "fin", "for", "men", "fuin", "gaer", "gaur", "gil", "gir", "ith", "glin", "gol", "odh", "gond", "gor",
        "groth", "grod", "gul", "gurth", "gwaith", "gwath", "wath", "had", "hod", "haudh", "heru", "him", "hini",
        "hith", "hoth", "hyar", "men", "ia", "iant", "iath", "iaur", "ilm", "iluve", "kal", "gal", "kano", "kel",
        "kemen", "khel", "ek", "khil", "kir", "lad", "laure", "lhach", "lin", "lith", "lok", "lom", "lome", "londe",
        "los", "loth", "luin", "maeg", "mal", "man", "mel", "men", "menel", "mer", "eth", "min", "as", "mir",
        "mith", "mor", "moth", "nan", "nar", "naug", "dil", "dur", "nel", "dor", "nen", "nim", "orn", "orod", "os",
        "pal", "an", "pel", "quen", "quet", "ram", "ran", "rant", "ras", "rauko", "ril", "rim", "ring", "ris",
        "roch", "rom", "rond", "ros", "ruin", "ruth", "sarn", "ser", "eg", "sil", "sir", "sul", "tal", "dal", "tal",
        "ath", "tar", "tath", "ar", "taur", "tel", "thal", "thang", "thar", "thaur", "thin", "thol", "thon", "thor",
        "on", "til", "tin", "tir", "tol", "tum", "tur", "uial", "ur", "val", "wen", "wing", "yave"
    };

    public override string[]? FindQuests => new string[]
    {
        "You find the following inscription in the floor",
        "You see a message inscribed in the wall",
        "There is a sign saying",
        "Something is written on the staircase",
        "You find a scroll with the following message"
    };

    public override string[]? FunnyComments => new string[]
    {
        "Wow, cosmic, man!",
        "Rad!",
        "Groovy!",
        "Cool!",
        "Far out!"
    };

    public override string[]? FunnyDescriptions => new string[]
    {
        "silly", "hilarious", "absurd", "insipid", "ridiculous", "laughable", "ludicrous", "far-out", "groovy",
        "postmodern", "fantastic", "dadaistic", "cubistic", "cosmic", "awesome", "incomprehensible", "fabulous",
        "amazing", "incredible", "chaotic", "wild", "preposterous"
    };

    public override string[]? HorrificDescriptions => new string[]
    {
        "abominable", "abysmal", "appalling", "baleful", "blasphemous", "disgusting", "dreadful", "filthy",
        "grisly", "hideous", "hellish", "horrible", "infernal", "loathsome", "nightmarish", "repulsive",
        "sacrilegious", "terrible", "unclean", "unspeakable"
    };

    public override string[]? IllegibleFlavorSyllables => new string[]
    {
        "a", "ab", "ag", "aks", "ala", "an", "ankh", "app", "arg", "arze", "ash", "aus", "ban", "bar", "bat", "bek",
        "bie", "bin", "bit", "bjor", "blu", "bot", "bu", "byt", "comp", "con", "cos", "cre", "dalf", "dan", "den",
        "der", "doe", "dok", "eep", "el", "eng", "er", "ere", "erk", "esh", "evs", "fa", "fid", "flit", "for",
        "fri", "fu", "gan", "gar", "glen", "gop", "gre", "ha", "he", "hyd", "i", "ing", "ion", "ip", "ish", "it",
        "ite", "iv", "jo", "kho", "kli", "klis", "la", "lech", "man", "mar", "me", "mi", "mic", "mik", "mon",
        "mung", "mur", "nag", "nej", "nelg", "nep", "ner", "nes", "nis", "nih", "nin", "o", "od", "ood", "org",
        "orn", "ox", "oxy", "pay", "pet", "ple", "plu", "po", "pot", "prok", "re", "rea", "rhov", "ri", "ro", "rog",
        "rok", "rol", "sa", "san", "sat", "see", "sef", "seh", "shu", "ski", "sna", "sne", "snik", "sno", "so",
        "sol", "sri", "sta", "sun", "ta", "tab", "tem", "ther", "ti", "tox", "trol", "tue", "turs", "u", "ulk",
        "um", "un", "uni", "ur", "val", "viv", "vly", "vom", "wah", "wed", "werg", "wex", "whon", "wun", "x",
        "yerg", "yp", "zun", "tri", "blaa", "jah", "bul", "on", "foo", "ju", "xuxu"
    };

    public override string[]? ShopkeeperAcceptedComments => new string[]
    {
        "Okay.",
        "Fine.",
        "Accepted!",
        "Agreed!",
        "Done!",
        "Taken!"
    };
}
