// <auto-generated>
// This code was generated by the AngbandOS.Core.Interface.MetaGen tool.
// Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
namespace AngbandOS.Core.Interface.Metadata;

public static class StoreFactoryMetadata
{
    public static PropertyMetadata[] Metadata
    {
        get
        {
            return new PropertyMetadata[]
            {
                new BooleanPropertyMetadata("IsEmptyLot")
                {
                    DefaultValue = false,
                    Description = "Returns true, if the store is an empty lot; false, if it is a store.  Empty lots render as either grave yards or fields.",
                    IsNullable = false,
                    Title = "Lot Is Empty?",
                },
                new BooleanPropertyMetadata("BuildingsMadeFromPermanentRock")
                {
                    DefaultValue = true,
                    Description = "Returns true, if the store (non-empty lot) is built from permanent rock.  Abandoned stores are created from inner walls and removeable rubble.",
                    IsNullable = false,
                },
                new BooleanPropertyMetadata("StoreEntranceDoorsAreBlownOff")
                {
                    DefaultValue = false,
                    Description = "Returns true, if the entrances to the stores are are randomly placed.",
                    IsNullable = false,
                },
                new StringPropertyMetadata("Key")
                {
                    DefaultValue = null,
                    Description = "",
                    IsNullable = false,
                },
                new IntegerPropertyMetadata("PageSize")
                {
                    DefaultValue = 26,
                    Description = "Returns the number of items in a page for the store.",
                    IsNullable = false,
                },
                new BooleanPropertyMetadata("UseHomeCarry")
                {
                    DefaultValue = false,
                    Description = "",
                    IsNullable = false,
                },
                new StringsPropertyMetadata("ItemFilterNames")
                {
                    DefaultValue = null,
                    Description = "Returns the names of the item matching criterion used to determine which items the store buys.  Returns an empty arrary, by default, to indicate that the store does not buy any items.",
                    IsNullable = false,
                },
                new BooleanPropertyMetadata("IsHomeThatCanBeBought")
                {
                    DefaultValue = false,
                    Description = "Returns true, if the store is a home that can be bought; false, otherwise.  When true, the doors locked will return true, if the store/home is in the correct town.  Returns false, by default.",
                    IsNullable = false,
                },
                new BooleanPropertyMetadata("MaintainsStockLevels")
                {
                    DefaultValue = true,
                    Description = "Returns whether or not the store should perform maintenance.  When true, the store will automatically maintain stock levels based on the MinKeep, MaxKeep and Turnover values.  Returns true, by default.",
                    IsNullable = false,
                },
                new IntegerPropertyMetadata("MaxInventory")
                {
                    DefaultValue = 26,
                    Description = "Returns the maximum number of items the store should maintain.  Returns one pagesize (26), by default.",
                    IsNullable = false,
                },
                new IntegerPropertyMetadata("MinInventory")
                {
                    DefaultValue = 6,
                    Description = "Returns the minimum number of items the store should maintain.  Applies only when MaintainsStockLevels returns true.  Returns 6, by default.",
                    IsNullable = false,
                },
                new IntegerPropertyMetadata("StoreTurnover")
                {
                    DefaultValue = 9,
                    Description = "Returns the number of items the store should delete during maintenance.  Applies only when MaintainsStockLevels returns true.  Returns 9, by default.",
                    IsNullable = false,
                },
                new TuplePropertyMetadata("StoreStockManifestDefinitions")
                {
                    Types = new PropertyMetadata[]
                    {
                        new StringPropertyMetadata("ItemFactoryName")
                        {
                            DefaultValue = null,
                            Description = "The name of the item factory.",
                            IsNullable = false,
                        },
                        new IntegerPropertyMetadata("Weight")
                        {
                            DefaultValue = null,
                            Description = "The associated distribution weight for the item factory.",
                            IsNullable = false,
                        },
                    },
                    Description = "Returns the manifests used to stock the store.  These manifests specify which item factories the store stocks and an assocated distribution weight for each item factory.",
                    IsNullable = true,
                },
                new BooleanPropertyMetadata("ShufflesOwnersAndPricing")
                {
                    DefaultValue = true,
                    Description = "Returns whether or not the store should occasionally change the owner and put items on sale.  When true, which is by default, the store will automatically perform this shuffling.",
                    IsNullable = false,
                },
                new StringsPropertyMetadata("ShopkeeperNames")
                {
                    DefaultValue = null,
                    Description = "Returns the skopkeepers that can be owners of the store.",
                    IsNullable = false,
                },
                new StringPropertyMetadata("AdvertisedStoreCommand1Name")
                {
                    DefaultValue = null,
                    Description = "",
                    IsNullable = true,
                },
                new StringPropertyMetadata("AdvertisedStoreCommand2Name")
                {
                    DefaultValue = null,
                    Description = "",
                    IsNullable = true,
                },
                new StringPropertyMetadata("AdvertisedStoreCommand3Name")
                {
                    DefaultValue = null,
                    Description = "",
                    IsNullable = true,
                },
                new StringPropertyMetadata("AdvertisedStoreCommand4Name")
                {
                    DefaultValue = null,
                    Description = "",
                    IsNullable = true,
                },
                new StringPropertyMetadata("AdvertisedStoreCommand5Name")
                {
                    DefaultValue = null,
                    Description = "",
                    IsNullable = true,
                },
                new IntegerPropertyMetadata("WidthOfDescriptionColumn")
                {
                    DefaultValue = 58,
                    Description = "Returns the width of the description column for rendering items in the store inventory.  The HomeStore defines a wider column for the description.",
                    IsNullable = false,
                },
                new BooleanPropertyMetadata("RenderWeightUnitOfMeasurement")
                {
                    DefaultValue = false,
                    Description = "Returns whether the weight column should render the lb. units of measurement.  The players home has sufficient space to render, but the other stores do not.",
                    IsNullable = false,
                },
                new StringPropertyMetadata("TileName")
                {
                    DefaultValue = null,
                    Description = "",
                    IsNullable = false,
                },
                new BooleanPropertyMetadata("ItemsRenderFlavorAware")
                {
                    DefaultValue = true,
                    Description = "Returns true, if the items should render as flavor aware; false, otherwise.  Stores will render their items as flavor aware.  The flavor awareness is factory related.  Stores override the factory value.  Pawnshops and the home stores render items as they are seen in the dungeon. Returns true, by default.  Pawnshops and the home store return false.",
                    IsNullable = false,
                },
                new StringPropertyMetadata("OwnerName")
                {
                    DefaultValue = null,
                    Description = "Returns the name of the owner of the store; or null, if the store owner should reflect the store owner.",
                    IsNullable = true,
                },
                new StringPropertyMetadata("Title")
                {
                    DefaultValue = null,
                    Description = "Returns the title of the store; or null, if the store title should reflect the store owner.",
                    IsNullable = true,
                },
                new BooleanPropertyMetadata("StoreMaintainsInventory")
                {
                    DefaultValue = true,
                    Description = "Returns true, if the store maintains an inventory.  When false, the various buying, selling and inventory maintenace properties are ignored. Returns true, by default.  The Hall store returns false.",
                    IsNullable = false,
                },
                new BooleanPropertyMetadata("ShowItemPricing")
                {
                    DefaultValue = true,
                    Description = "Returns whether or not the store should show prices with items in the inventory.  Return true, by default.  The home does not show prices.",
                    IsNullable = false,
                },
                new IntegerPropertyMetadata("MarkupRate")
                {
                    DefaultValue = 1,
                    Description = "Returns the rate at which the store marks up items.  Returns 1, by default.",
                    IsNullable = false,
                },
                new IntegerPropertyMetadata("MarkdownRate")
                {
                    DefaultValue = 1,
                    Description = "Returns the rate at which the store marks down items.  Returns 1, by default.",
                    IsNullable = false,
                },
                new BooleanPropertyMetadata("PerformsMaintenanceWhenResting")
                {
                    DefaultValue = true,
                    Description = "",
                    IsNullable = false,
                },
                new IntegerPropertyMetadata("LevelForRandomItemCreation")
                {
                    DefaultValue = null,
                    Description = "Allows the store factory the option to create a random item using the value as the base level for the item; or null, if the store should choose from the StoreStockManifests.  The black market store will override this method.",
                    IsNullable = true,
                },
                new IntegerPropertyMetadata("MinimumItemValue")
                {
                    DefaultValue = 0,
                    Description = "",
                    IsNullable = false,
                },
                new StringPropertyMetadata("NoStockMessage")
                {
                    DefaultValue = "I am currently out of stock.",
                    Description = "",
                    IsNullable = false,
                },
                new StringPropertyMetadata("PurchaseMessage")
                {
                    DefaultValue = "Which item are you interested in? ",
                    Description = "",
                    IsNullable = false,
                },
                new BooleanPropertyMetadata("StoreSellsItems")
                {
                    DefaultValue = true,
                    Description = "Returns true, if the store sells items for gold to the player when the player retrieves items from the store.  Returns true, by default. The home does not sell items.",
                    IsNullable = false,
                },
                new BooleanPropertyMetadata("BoughtMessageAsBoughtBack")
                {
                    DefaultValue = false,
                    Description = "Returns true, if the store indicates that the player bought \"back\" the item.  False, otherwise.  Returns false, by default.  The pawnbroker store returns true.",
                    IsNullable = false,
                },
                new StringPropertyMetadata("SellPrompt")
                {
                    DefaultValue = "Sell which item? ",
                    Description = "",
                    IsNullable = false,
                },
                new StringPropertyMetadata("StoreFullMessage")
                {
                    DefaultValue = "I have not the room in my Stores to keep it.",
                    Description = "",
                    IsNullable = false,
                },
                new BooleanPropertyMetadata("StoreMaintainsInscription")
                {
                    DefaultValue = false,
                    Description = "Returns true, if the store keeps inscriptions on items it acquires.  Only the players home does this.",
                    IsNullable = false,
                },
                new BooleanPropertyMetadata("StoreBuysItems")
                {
                    DefaultValue = true,
                    Description = "Returns true, if the store buys items for gold from the player.  Returns true, by default.  The home store doesn't buy items.",
                    IsNullable = false,
                },
                new StringPropertyMetadata("BoughtVerb")
                {
                    DefaultValue = "sold",
                    Description = "Returns the verb when the player sells or drops an item to the store.  Normally, \"sold\", but the home \"drops\" and the pawn shop \"pawns\".",
                    IsNullable = false,
                },
                new BooleanPropertyMetadata("StoreIdentifiesItems")
                {
                    DefaultValue = true,
                    Description = "Returns true, if the store identifies items when the player sells an item to the store.  Does not apply to stores that do not buy items.",
                    IsNullable = false,
                },
                new BooleanPropertyMetadata("StoreAnalyzesPurchases")
                {
                    DefaultValue = true,
                    Description = "",
                    IsNullable = false,
                },
            };
        }
    }
}
